{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Autofill.js\";\nimport React, { Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst changeTerm = (suggestion, setTerm, target, dispatch) => {\n  dispatch(setTerm(suggestion));\n};\n\nconst returnSuggestions = (term, array, setTerm, dispatch) => {\n  console.log(array); //find match\n\n  let suggestions = array.filter(string => string.toLowerCase().indexOf(term.toLowerCase()) > -1); //return listElement for each suggestion\n\n  return term && suggestions.map((suggestion, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    className: \"suggestion\",\n    onClick: e => dispatch(setTerm(suggestion)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, suggestion));\n};\n\nfunction Autofill({\n  term,\n  array,\n  setTerm\n}) {\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, returnSuggestions(term, array, setTerm, dispatch));\n}\n\nexport default Autofill;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Autofill.js"],"names":["React","Fragment","useDispatch","changeTerm","suggestion","setTerm","target","dispatch","returnSuggestions","term","array","console","log","suggestions","filter","string","toLowerCase","indexOf","map","index","e","Autofill"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAIA,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAaC,OAAb,EAAsBC,MAAtB,EAA8BC,QAA9B,KAA0C;AAC3DA,EAAAA,QAAQ,CAACF,OAAO,CAACD,UAAD,CAAR,CAAR;AACD,CAFD;;AAIA,MAAMI,iBAAiB,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcL,OAAd,EAAuBE,QAAvB,KAAoC;AAE5DI,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAF4D,CAI5D;;AACA,MAAIG,WAAW,GAAGH,KAAK,CAACI,MAAN,CAChBC,MAAM,IAAIA,MAAM,CAACC,WAAP,GAAqBC,OAArB,CAA6BR,IAAI,CAACO,WAAL,EAA7B,IAAmD,CAAC,CAD9C,CAAlB,CAL4D,CAQ1D;;AACF,SAAOP,IAAI,IAAII,WAAW,CAACK,GAAZ,CAAgB,CAACd,UAAD,EAAae,KAAb,kBAC7B;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,OAAO,EAAEC,CAAC,IAAIb,QAAQ,CAACF,OAAO,CAACD,UAAD,CAAR,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGiDA,UAHjD,CADa,CAAf;AAMD,CAfD;;AAiBA,SAASiB,QAAT,CAAmB;AAACZ,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcL,EAAAA;AAAd,CAAnB,EAA2C;AAEzC,QAAME,QAAQ,GAAGL,WAAW,EAA5B;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGM,iBAAiB,CAACC,IAAD,EAAOC,KAAP,EAAcL,OAAd,EAAuBE,QAAvB,CAFpB,CADF;AAOD;;AAED,eAAec,QAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport { useDispatch } from 'react-redux';\n\n\n\nconst changeTerm = (suggestion, setTerm, target, dispatch) =>{\n  dispatch(setTerm(suggestion));\n}\n\nconst returnSuggestions = (term, array, setTerm, dispatch) => {\n\n  console.log(array);\n\n  //find match\n  let suggestions = array.filter(\n    string => string.toLowerCase().indexOf(term.toLowerCase()) > -1);\n\n    //return listElement for each suggestion\n  return term && suggestions.map((suggestion, index) => (\n    <p \n      key={index} \n      className=\"suggestion\" \n      onClick={e => dispatch(setTerm(suggestion)) }>{suggestion}</p>\n  ))\n}\n\nfunction Autofill ({term, array, setTerm}) {\n\n  const dispatch = useDispatch();\n\n  return(\n    <Fragment >\n\n      {returnSuggestions(term, array, setTerm, dispatch)}\n    </Fragment>\n  )\n\n}\n\nexport default Autofill;"]},"metadata":{},"sourceType":"module"}