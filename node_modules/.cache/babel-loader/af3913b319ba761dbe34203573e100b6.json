{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/SearchResults.js\";\nimport React from 'react';\nimport Record from './Record';\nimport { useSelector } from 'react-redux'; // ADD VINYL FILTER\n\nlet type = \"master\";\n\nconst presentResults = results => {\n  return;\n};\n\nfunction SearchResults() {\n  const results = useSelector(state => state.searchResults);\n\n  const filterArtist = result => result.type !== \"artist\";\n\n  const filterResults = result => result.type !== \"results\";\n  /*  const filterVinyl = result => result.format[0] === 'Vinyl'; */\n\n\n  let filtered = results.filter(filterArtist).filter(filterResults)\n  /* .filter(filterVinyl) */\n  ;\n  console.log(filtered);\n  return results && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchResults\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, filtered.map((record, index) => {\n    return /*#__PURE__*/React.createElement(Record, {\n      key: record.id,\n      index: index,\n      title: record.title,\n      year: record.year,\n      label: record.label,\n      size: record.format,\n      hiddenWhenSearchresult: {\n        display: 'none'\n      },\n      img: record.cover_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }\n    });\n  })));\n}\n\nexport default SearchResults;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/SearchResults.js"],"names":["React","Record","useSelector","type","presentResults","results","SearchResults","state","searchResults","filterArtist","result","filterResults","filtered","filter","console","log","map","record","index","id","title","year","label","format","display","cover_image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,WAAR,QAA0B,aAA1B,C,CAEA;;AAEA,IAAIC,IAAI,GAAG,QAAX;;AAEA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAIhC;AAEH,CAND;;AAUA,SAASC,aAAT,GAAyB;AAEvB,QAAMD,OAAO,GAAGH,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,aAAhB,CAA3B;;AAEA,QAAMC,YAAY,GAAGC,MAAM,IAAIA,MAAM,CAACP,IAAP,KAAgB,QAA/C;;AACA,QAAMQ,aAAa,GAAGD,MAAM,IAAIA,MAAM,CAACP,IAAP,KAAgB,SAAhD;AACD;;;AACC,MAAIS,QAAQ,GAAGP,OAAO,CAACQ,MAAR,CAAeJ,YAAf,EAA6BI,MAA7B,CAAoCF,aAApC;AAAkD;AAAjE;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,SAAOP,OAAO,iBACZ;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,QAAQ,CAACI,GAAT,CAAa,CAACC,MAAD,EAASC,KAAT,KAAmB;AACnC,wBAAO,oBAAC,MAAD;AACL,MAAA,GAAG,EAAED,MAAM,CAACE,EADP;AAEL,MAAA,KAAK,EAAED,KAFF;AAGL,MAAA,KAAK,EAAED,MAAM,CAACG,KAHT;AAIL,MAAA,IAAI,EAAEH,MAAM,CAACI,IAJR;AAKL,MAAA,KAAK,EAAEJ,MAAM,CAACK,KALT;AAML,MAAA,IAAI,EAAEL,MAAM,CAACM,MANR;AAOL,MAAA,sBAAsB,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAPnB;AAQL,MAAA,GAAG,EAAEP,MAAM,CAACQ,WARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AASD,GAVI,CADH,CADF,CADF;AAiBD;;AAED,eAAenB,aAAf","sourcesContent":["import React from 'react';\nimport Record from './Record';\nimport {useSelector} from 'react-redux'\n\n// ADD VINYL FILTER\n\nlet type = \"master\";\n\nconst presentResults = (results) => {\n\n\n\n    return \n  \n}\n\n\n\nfunction SearchResults() {\n\n  const results = useSelector(state => state.searchResults);\n\n  const filterArtist = result => result.type !== \"artist\";\n  const filterResults = result => result.type !== \"results\";\n /*  const filterVinyl = result => result.format[0] === 'Vinyl'; */\n  let filtered = results.filter(filterArtist).filter(filterResults)/* .filter(filterVinyl) */;\n  console.log(filtered);\n\n  return results && (\n    <div className=\"searchResults\">\n      <div className=\"Wrapper\" >\n        {filtered.map((record, index) => {\n      return <Record \n        key={record.id}\n        index={index}\n        title={record.title} \n        year={record.year}\n        label={record.label}\n        size={record.format}\n        hiddenWhenSearchresult={{display: 'none'}}\n        img={record.cover_image}/>\n    })} \n      </div>\n    </div>\n  )\n}\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}