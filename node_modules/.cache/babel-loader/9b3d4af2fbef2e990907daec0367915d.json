{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/PicSelector.js\";\nimport React, { useState } from 'react';\nimport Discogs from './util/Discogs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updatePicSelectorStyle, updateImageArray, changeImage } from '../actions'; // SATZZEICHEN IN DER BILDERSUCHE SIND PROBLEMATISCH\n\nfunction PicSelector() {\n  const dispatch = useDispatch();\n  const title = useSelector(state => state.editor.recordInProgress.title);\n  const artist = useSelector(state => state.editor.recordInProgress.artist);\n  const style = useSelector(state => state.editor.picSelectorStyle);\n  const imageArray = useSelector(state => state.editor.imageArray);\n  const [counter, setCounter] = useState(0);\n  const [URLToUpload, setURLToUpload] = useState('');\n\n  const imageSwapPrevious = e => {\n    e.preventDefault();\n\n    if (counter === 0) {\n      setCounter(imageArray.length - 1);\n    } else {\n      setCounter(counter - 1);\n    }\n\n    dispatch(changeImage(imageArray[counter - 1]));\n  };\n\n  const imageSwapNext = e => {\n    e.preventDefault();\n\n    if (counter === imageArray.length - 1) {\n      setCounter(0);\n    } else {\n      setCounter(counter + 1);\n    }\n\n    dispatch(changeImage(imageArray[counter + 1]));\n  };\n\n  const findImage = e => {\n    e.preventDefault();\n    setCounter(0); //GENERATE SEARCHTERM\n\n    let titleQuery = title.replace(/ /g, '+');\n    let artistQuery = artist.replace(/ /g, '+');\n    let term = `${titleQuery}+${artistQuery}`; //GENERATE IMAGE_ARRAY\n\n    Discogs.search(term).then(res => res.results.map(result => result.cover_image)).then(res => res.filter(url => url.indexOf('spacer.gif') === -1)).then(res => dispatch(updateImageArray(res))).then(res => dispatch(changeImage(res.payload[0]))); // CSS UPDATE\n\n    dispatch(updatePicSelectorStyle('findBtn', {\n      display: 'none'\n    }));\n    dispatch(updatePicSelectorStyle('urlInput', {\n      top: '90%'\n    }));\n    dispatch(updatePicSelectorStyle('preNxt', {\n      display: 'block'\n    }));\n    dispatch(updatePicSelectorStyle('previewImage', {\n      opacity: 1\n    }));\n  };\n\n  const uploadImage = e => {\n    e.preventDefault();\n    dispatch(changeImage(URLToUpload));\n    setCounter(0);\n    dispatch(updateImageArray([URLToUpload]));\n    dispatch(updatePicSelectorStyle('previewImage', {\n      opacity: 1\n    }));\n    dispatch(updatePicSelectorStyle('urlInput', {\n      display: 'none'\n    }));\n    dispatch(updatePicSelectorStyle('findBtn', {\n      top: '10px'\n    }));\n    dispatch(updatePicSelectorStyle('preNxt', {\n      display: 'none'\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imgBox oneLine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: style.findBtn,\n    onClick: e => findImage(e),\n    id: \"findBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Find Cover\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: style.preNxt,\n    className: \"imageSwitches\",\n    id: \"prevBtn\",\n    onClick: e => imageSwapPrevious(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"prev\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: style.preNxt,\n    className: \"imageSwitches\",\n    id: \"nextBtn\",\n    onClick: e => imageSwapNext(e, 'plus'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"next\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"previewImage\",\n    src: imageArray[counter],\n    alt: \"album_cover\",\n    style: style.previewImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: style.urlInput,\n    className: \"urlInputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    style: style.urlInput,\n    id: \"imageGetter\",\n    type: \"text\",\n    placeholder: \"or insert imageUrl\",\n    onChange: e => setURLToUpload(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: style.urlInput,\n    id: \"imageGetterBtn\",\n    onClick: e => uploadImage(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \" upload\")));\n}\n\nexport default PicSelector;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/PicSelector.js"],"names":["React","useState","Discogs","useSelector","useDispatch","updatePicSelectorStyle","updateImageArray","changeImage","PicSelector","dispatch","title","state","editor","recordInProgress","artist","style","picSelectorStyle","imageArray","counter","setCounter","URLToUpload","setURLToUpload","imageSwapPrevious","e","preventDefault","length","imageSwapNext","findImage","titleQuery","replace","artistQuery","term","search","then","res","results","map","result","cover_image","filter","url","indexOf","payload","display","top","opacity","uploadImage","findBtn","preNxt","previewImage","urlInput","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Discogs from './util/Discogs';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { updatePicSelectorStyle, updateImageArray, changeImage } from '../actions';\n\n// SATZZEICHEN IN DER BILDERSUCHE SIND PROBLEMATISCH\n\nfunction PicSelector () {\n  const dispatch = useDispatch()\n  \n  const title = useSelector(state => state.editor.recordInProgress.title);\n  const artist = useSelector(state => state.editor.recordInProgress.artist);\n  const style = useSelector(state => state.editor.picSelectorStyle)\n  const imageArray = useSelector(state => state.editor.imageArray);\n\n  const [counter, setCounter] = useState(0);\n  const [URLToUpload, setURLToUpload]= useState('');\n\n\n  const imageSwapPrevious = e => {\n    e.preventDefault();\n    \n    if(counter === 0){\n      setCounter(imageArray.length -1)\n    }else {\n    setCounter(counter - 1);\n    }\n    dispatch(changeImage(imageArray[counter-1]))\n  }\n\n  const imageSwapNext = e => {\n    e.preventDefault();\n    \n    if(counter === imageArray.length -1){\n      setCounter(0);\n    } else {\n      setCounter(counter +1);\n    }\n    dispatch(changeImage(imageArray[counter+1]))\n  }\n  \n\n  const findImage = e => {\n    e.preventDefault();\n    setCounter(0);\n\n//GENERATE SEARCHTERM\n    let titleQuery = title.replace(/ /g, '+');\n    let artistQuery = artist.replace(/ /g, '+');\n    let term = `${titleQuery}+${artistQuery}`;\n\n//GENERATE IMAGE_ARRAY\n    Discogs.search(term)\n    .then(res =>  res.results.map(result => result.cover_image))\n    .then(res => res.filter(url => url.indexOf('spacer.gif') === -1))\n    .then(res => dispatch(updateImageArray(res)))\n    .then(res => dispatch(changeImage(res.payload[0])))\n\n  // CSS UPDATE\n    dispatch(updatePicSelectorStyle('findBtn', {display: 'none'}))\n    dispatch(updatePicSelectorStyle('urlInput', {top: '90%'}))\n    dispatch(updatePicSelectorStyle('preNxt', {display: 'block'}))\n    dispatch(updatePicSelectorStyle('previewImage', {opacity: 1}))\n\n  }\n\n    const uploadImage = e => {\n      e.preventDefault();\n      dispatch(changeImage(URLToUpload))\n      setCounter(0);\n      dispatch(updateImageArray([URLToUpload]))\n      dispatch(updatePicSelectorStyle('previewImage', {opacity: 1}))\n      dispatch(updatePicSelectorStyle('urlInput', {display:'none'}))\n      dispatch(updatePicSelectorStyle('findBtn', {top: '10px'}))\n      dispatch(updatePicSelectorStyle('preNxt', {display: 'none'}))\n    }\n\n\n  return (\n    <div className=\"imgBox oneLine\">\n      <button \n        style={style.findBtn}\n        onClick={e => findImage(e)}\n        id=\"findBtn\">Find Cover</button>\n      <button \n        style={style.preNxt}\n        className=\"imageSwitches\" \n        id=\"prevBtn\"\n        onClick={(e) => imageSwapPrevious(e)}>prev</button>\n      <button \n        style={style.preNxt}\n        className=\"imageSwitches\" \n        id=\"nextBtn\"\n        onClick={(e) => imageSwapNext(e,'plus')}>next</button>\n      <img \n        className=\"previewImage\" \n        src={imageArray[counter]} \n        alt=\"album_cover\" \n        style={style.previewImage}/>\n      <div \n        style={style.urlInput}\n        className=\"urlInputWrapper\">\n        <input \n          style={style.urlInput}\n          id=\"imageGetter\" \n          type=\"text\"\n          placeholder=\"or insert imageUrl\"\n          onChange={e => setURLToUpload(e.target.value)} />\n        <button \n          style={style.urlInput}\n          id=\"imageGetterBtn\"\n          onClick={e => uploadImage(e)}> upload</button>  \n      </div>\n    </div>\n  )\n}\n\nexport default PicSelector;"]},"metadata":{},"sourceType":"module"}