{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/PicSelector.js\";\nimport React, { useState } from 'react';\nimport Discogs from './util/Discogs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeImage, updateImageArray } from '../actions';\n\nfunction PicSelector() {\n  const dispatch = useDispatch();\n  const title = useSelector(state => state.record.title);\n  const artist = useSelector(state => state.record.artist);\n  const imageArray = useSelector(state => state.variables.imageArray);\n  const [counter, setCounter] = useState(0);\n\n  const imageSwap = (e, plus) => {\n    e.preventDefault();\n\n    if (plus) {\n      if (counter === imageArray.length - 1) {\n        setCounter(0);\n      } else {\n        setCounter(counter + 1);\n      }\n    } else {\n      if (counter === 0) {\n        setCounter(imageArray.length - 1);\n      } else {\n        setCounter(counter - 1);\n      }\n\n      console.log(counter);\n      console.log(imageArray);\n    }\n  };\n\n  const findImage = e => {\n    e.preventDefault();\n    let titleQuery = title.replace(/ /g, '+');\n    let artistQuery = artist.replace(/ /g, '+');\n    let term = `${titleQuery}+${artistQuery}`;\n    Discogs.search(term).then(res => res.results.map(result => result.cover_image)).then(res => res.filter(url => url.indexOf('spacer.gif') === -1)).then(res => dispatch(updateImageArray(res)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imgBox oneLine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => findImage(e),\n    id: \"findBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Find Cover\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"That's it\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"imageSwitches\",\n    id: \"prevBtn\",\n    onClick: e => imageSwap(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"prev\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"imageSwitches\",\n    id: \"nextBtn\",\n    onClick: e => imageSwap(e, 'plus'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"next\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"previewImage\",\n    src: imageArray[counter],\n    alt: \"album_cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"imageGetter\",\n    type: \"text\",\n    placeholder: \"or insert imageUrl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"imageGetterBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \" upload\"));\n}\n\nexport default PicSelector;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/PicSelector.js"],"names":["React","useState","Discogs","useSelector","useDispatch","changeImage","updateImageArray","PicSelector","dispatch","title","state","record","artist","imageArray","variables","counter","setCounter","imageSwap","e","plus","preventDefault","length","console","log","findImage","titleQuery","replace","artistQuery","term","search","then","res","results","map","result","cover_image","filter","url","indexOf"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Discogs from './util/Discogs';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { changeImage, updateImageArray } from '../actions';\n\n\nfunction PicSelector () {\n  const dispatch = useDispatch()\n  const title = useSelector(state => state.record.title);\n  const artist = useSelector(state => state.record.artist);\n\n  const imageArray = useSelector(state => state.variables.imageArray);\n  const [counter, setCounter] = useState(0);\n\n  const imageSwap = (e, plus) => {\n    e.preventDefault();\n    if(plus){\n        if(counter === imageArray.length -1){\n          setCounter(0);\n        } else {\n          setCounter(counter +1);\n        }\n      \n    } else {\n      if(counter === 0){\n        setCounter(imageArray.length -1)\n      }else {\n      setCounter(counter - 1);\n      }\n    console.log(counter);\n    console.log(imageArray)\n    }\n  }\n\n  const findImage = e => {\n    e.preventDefault();\n\n    let titleQuery = title.replace(/ /g, '+');\n    let artistQuery = artist.replace(/ /g, '+');\n    let term = `${titleQuery}+${artistQuery}`;\n    \n    Discogs.search(term)\n    .then(res =>  res.results.map(result => result.cover_image))\n    .then(res => res.filter(url => url.indexOf('spacer.gif') === -1))\n    .then(res => dispatch(updateImageArray(res)))\n  }\n\n\n  return(\n    <div className=\"imgBox oneLine\">\n      <button \n        onClick={e => findImage(e)}\n        id=\"findBtn\">Find Cover</button>\n        <button>That's it</button>\n      <button \n        className=\"imageSwitches\" \n        id=\"prevBtn\"\n        onClick={(e) => imageSwap(e)}>prev</button>\n      <button \n        className=\"imageSwitches\" \n        id=\"nextBtn\"\n        onClick={(e) => imageSwap(e,'plus')}>next</button>\n      <img \n        className=\"previewImage\" \n        src={imageArray[counter]} \n        alt=\"album_cover\" />\n      <input \n        id=\"imageGetter\" \n        type=\"text\"\n        placeholder=\"or insert imageUrl\"/>\n      <button id=\"imageGetterBtn\"> upload</button>  \n    </div>\n  )\n}\n\nexport default PicSelector;"]},"metadata":{},"sourceType":"module"}