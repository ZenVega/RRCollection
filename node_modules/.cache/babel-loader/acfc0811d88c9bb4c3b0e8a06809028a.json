{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Record.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeRecord, updateImageArray, addRecord, editRecord, updateIndex, showEditor, changeArtist, changeLabel, changeSize, changeTitle, changeYear, changeImage } from '../actions';\n\nfunction Record({\n  title,\n  artist,\n  year,\n  label,\n  size,\n  index,\n  img,\n  hiddenWhenSearchresult\n}) {\n  let dispatch = useDispatch();\n  let style = {};\n  let istyle = {};\n  let addButton = '✎';\n\n  if (hiddenWhenSearchresult) {\n    addButton = 'add';\n  }\n\n  const records = useSelector(state => state.collection.records);\n  const labels = useSelector(state => state.collection.labels);\n  const artists = useSelector(state => state.collection.artists);\n\n  if (img.indexOf('spacer.gif') !== -1) {\n    img = './norecord.png';\n    style = {\n      zIndex: 2,\n      opacity: 1\n    };\n  } else if (!img) {\n    img = \"\";\n    istyle = {\n      display: \"none\"\n    };\n    style = {\n      top: 0,\n      opacity: 1\n    };\n  }\n\n  const openEditor = () => {\n    if (hiddenWhenSearchresult) {\n      openAdder();\n    } else {\n      dispatch(changeTitle(records[index].title));\n      dispatch(changeYear(records[index].year));\n      dispatch(changeSize(records[index].size));\n      dispatch(changeArtist(artists.filter(artist => artist.artistID === records[index].artistID)[0].name));\n      dispatch(changeLabel(labels.filter(label => label.labelID === records[index].labelID)[0].name));\n      dispatch(changeImage(records[index].cover_image));\n      dispatch(editRecord());\n      dispatch(updateIndex(index));\n      dispatch(updateImageArray([records[index].cover_image]));\n      dispatch(showEditor());\n    }\n  };\n\n  const openAdder = () => {\n    dispatch(showEditor());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Record\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"backImage\",\n    src: img,\n    alt: \"album_cover\",\n    style: istyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoWrapper\",\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, artist), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, year), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, label), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, size, \"\\\"\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: hiddenWhenSearchresult,\n    onClick: () => dispatch(removeRecord(index)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"\\u2716\\uFE0E\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openEditor(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, addButton)));\n}\n\nexport default Record;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Record.js"],"names":["React","useSelector","useDispatch","removeRecord","updateImageArray","addRecord","editRecord","updateIndex","showEditor","changeArtist","changeLabel","changeSize","changeTitle","changeYear","changeImage","Record","title","artist","year","label","size","index","img","hiddenWhenSearchresult","dispatch","style","istyle","addButton","records","state","collection","labels","artists","indexOf","zIndex","opacity","display","top","openEditor","openAdder","filter","artistID","name","labelID","cover_image"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {removeRecord, updateImageArray, addRecord, editRecord, updateIndex, showEditor, changeArtist, changeLabel, changeSize, changeTitle, changeYear, changeImage} from '../actions';\n\n\n\nfunction Record ({title, artist, year, label, size, index, img, hiddenWhenSearchresult}) {\n\n  let dispatch =  useDispatch();\n  let style = {};\n  let istyle ={};\n\n  let addButton = '✎';\n    if(hiddenWhenSearchresult){\n      addButton = 'add';\n    }\n\n  const records = useSelector(state => state.collection.records);\n  const labels = useSelector(state => state.collection.labels);\n  const artists = useSelector(state => state.collection.artists);\n  \n  if(img.indexOf('spacer.gif') !== -1){\n    img = './norecord.png';\n    style = { zIndex: 2,\n              opacity: 1}\n  } else if(!img){\n    img = \"\";\n    istyle = {display:\"none\"}\n    style = { top:0,\n    opacity: 1}\n  }\n\n\n  const openEditor = () => {\n\n    if(hiddenWhenSearchresult){\n      openAdder();\n    } else {\n\n      dispatch(changeTitle(records[index].title));\n      dispatch(changeYear(records[index].year));\n      dispatch(changeSize(records[index].size));\n      dispatch(changeArtist(artists.filter(artist => artist.artistID === records[index].artistID)[0].name));\n      dispatch(changeLabel(labels.filter(label => label.labelID === records[index].labelID)[0].name));\n      dispatch(changeImage(records[index].cover_image));\n  \n      dispatch(editRecord());\n      dispatch(updateIndex(index))\n      dispatch(updateImageArray([records[index].cover_image]))\n      dispatch(showEditor());\n    }\n\n  }\n\n  const openAdder = () => {\n    dispatch(showEditor());\n  }\n\n  return(\n    <div className=\"Record\" >\n      <img className=\"backImage\" src={img} alt=\"album_cover\" style={istyle} />\n      <div className=\"infoWrapper\" style={style}>\n        <h2>{title}</h2>\n        <h2>{artist}</h2>\n        <p>{year}</p>\n        <p>{label}</p>\n        <p>{size}\"</p>\n        <button \n          style={hiddenWhenSearchresult}\n          onClick={() => dispatch(removeRecord(index))}>✖︎</button>\n        <button onClick={() => openEditor()}>{addButton}</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Record;"]},"metadata":{},"sourceType":"module"}