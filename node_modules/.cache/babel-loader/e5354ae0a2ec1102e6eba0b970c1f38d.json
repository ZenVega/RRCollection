{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Editor.js\";\n\n/* eslint-disable default-case */\nimport React from 'react';\nimport InputPlusAutofill from './Autofill';\nimport PicSelector from './PicSelector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeRecord, changeArtist, changeLabel, changeSize, changeTitle, changeYear, addNewRecord, addNewLabel, addNewArtist, hideEditor } from '../actions';\n\nconst {\n  v4: generateID\n} = require('uuid');\n\nfunction Editor() {\n  const dispatch = useDispatch();\n  const records = useSelector(state => state.collection.records);\n  const artists = useSelector(state => state.collection.artists);\n  const labels = useSelector(state => state.collection.labels);\n  const {\n    title,\n    year,\n    label,\n    artist,\n    size,\n    cover_image\n  } = useSelector(state => state.editor.recordInProgress);\n  const index = useSelector(state => state.editor.currentIndex);\n  const setup = useSelector(state => state.editor.setup);\n  const labelNames = labels.map(label => label.name);\n  const artistNames = artists.map(artist => artist.name);\n  const recordNames = records.map(record => record.title);\n\n  const addItem = e => {\n    if (!title || !artist) {\n      alert('Title or Artist Missing');\n      return;\n    }\n\n    if (index !== undefined) {\n      console.log(index);\n      dispatch(removeRecord(index));\n    }\n\n    let artistID;\n    let artistObj = artists.find(inListArtist => inListArtist.name === artist);\n\n    if (artistObj) {\n      artistID = artistObj.artistID;\n    }\n\n    if (!artistID) {\n      artistID = generateID();\n      const artistToAdd = {\n        name: artist,\n        artistID: artistID\n      };\n      dispatch(addNewArtist(artistToAdd));\n    }\n\n    let labelID;\n    let labelObj = labels.find(inListLabel => inListLabel.name === label);\n\n    if (labelObj) {\n      labelID = labelObj.labelID;\n    }\n\n    if (!labelID) {\n      labelID = generateID();\n      const labelToAdd = {\n        name: label,\n        labelID: labelID\n      };\n      dispatch(addNewLabel(labelToAdd));\n    }\n\n    const id = generateID();\n    const recordToAdd = {\n      id,\n      artistID,\n      title,\n      year,\n      size,\n      labelID,\n      cover_image\n    };\n    dispatch(addNewRecord(recordToAdd));\n    dispatch(hideEditor());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"EditorHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \" \", setup + ' record'), /*#__PURE__*/React.createElement(InputPlusAutofill, {\n    className: \"inputWrapper\",\n    term: title,\n    list: recordNames,\n    fromTop: 70,\n    placeholder: \"Title\",\n    handleChange: newValue => dispatch(changeTitle(newValue)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputPlusAutofill, {\n    className: \"inputWrapper\",\n    term: artist,\n    list: artistNames,\n    fromTop: 100,\n    placeholder: \"Artist\",\n    handleChange: newValue => dispatch(changeArtist(newValue)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputWrapper\",\n    type: \"number\",\n    name: \"addYear\",\n    value: year,\n    style: {\n      top: '160px'\n    },\n    onChange: e => dispatch(changeYear(e.target.value)),\n    placeholder: \"Year\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputPlusAutofill, {\n    className: \"inputWrapper\",\n    term: label ? label : '',\n    fromTop: 130,\n    list: labelNames,\n    placeholder: \"Label\",\n    handleChange: newValue => dispatch(changeLabel(newValue)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    style: {\n      top: '190px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"addSize\",\n    value: size,\n    onChange: e => dispatch(changeSize(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"12\\\"\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"10\\\"\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"7\\\"\")))), /*#__PURE__*/React.createElement(PicSelector, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => addItem(e),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, version), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(hideEditor()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"\\u2716\\uFE0E\")));\n}\n\nexport default Editor;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Editor.js"],"names":["React","InputPlusAutofill","PicSelector","useSelector","useDispatch","removeRecord","changeArtist","changeLabel","changeSize","changeTitle","changeYear","addNewRecord","addNewLabel","addNewArtist","hideEditor","v4","generateID","require","Editor","dispatch","records","state","collection","artists","labels","title","year","label","artist","size","cover_image","editor","recordInProgress","index","currentIndex","setup","labelNames","map","name","artistNames","recordNames","record","addItem","e","alert","undefined","console","log","artistID","artistObj","find","inListArtist","artistToAdd","labelID","labelObj","inListLabel","labelToAdd","id","recordToAdd","newValue","top","target","value","version"],"mappings":"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","sourcesContent":["/* eslint-disable default-case */\nimport React from 'react';\nimport InputPlusAutofill from './Autofill';\nimport PicSelector from './PicSelector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeRecord, changeArtist, changeLabel, changeSize, changeTitle, changeYear, addNewRecord, addNewLabel, addNewArtist , hideEditor } from '../actions';\nconst { v4: generateID } = require('uuid');\n\n\n\nfunction Editor(){\n\n  const dispatch = useDispatch();\n\n  const records = useSelector(state => state.collection.records);\n  const artists = useSelector(state => state.collection.artists);\n  const labels = useSelector(state => state.collection.labels);\n  \n  const {title, year ,label, artist, size, cover_image} = useSelector(state => state.editor.recordInProgress);\n\n  const index = useSelector(state => state.editor.currentIndex);\n  const setup = useSelector(state => state.editor.setup);\n  \n  const labelNames = labels.map(label => label.name);\n  const artistNames = artists.map(artist => artist.name);\n  const recordNames = records.map(record => record.title);\n\n\n\n  const addItem = e => {\n\n    if(!title || !artist){\n      alert('Title or Artist Missing');\n      return;\n    }\n\n\n    if(index !== undefined){\n      console.log(index);\n      dispatch(removeRecord(index));\n    }\n\n    let artistID;\n    let artistObj = artists.find(inListArtist => inListArtist.name === artist);\n    if(artistObj){\n      artistID = artistObj.artistID;\n    }\n\n    if(!artistID){\n      artistID = generateID();\n      const artistToAdd = {\n        name: artist,\n        artistID: artistID\n      };\n      dispatch(addNewArtist(artistToAdd))\n    }\n\n    let labelID;\n    let labelObj = labels.find(inListLabel => inListLabel.name === label);\n    if(labelObj){\n      labelID = labelObj.labelID;\n    }\n\n    if(!labelID){\n      labelID = generateID();\n      const labelToAdd = {\n        name: label,\n        labelID: labelID\n      };\n      dispatch(addNewLabel(labelToAdd))\n    }\n    const id = generateID();\n\n    const recordToAdd = {\n      id,\n      artistID,\n      title,\n      year,\n      size,\n      labelID,\n      cover_image\n    };\n    dispatch(addNewRecord(recordToAdd));\n    dispatch(hideEditor());\n  }\n\n  return (\n    <div className=\"Editor\">\n      <div className=\"inputBox\">\n      <h2 className=\"EditorHeader\" > {setup + ' record'}</h2>\n        <InputPlusAutofill\n          className=\"inputWrapper\"\n          term={title}\n          list={recordNames} \n          fromTop={70}\n          placeholder=\"Title\"\n          handleChange={newValue => dispatch(changeTitle(newValue))}\n          />\n        <InputPlusAutofill\n          className=\"inputWrapper\"\n          term={artist}\n          list={artistNames} \n          fromTop={100}\n          placeholder=\"Artist\"\n          handleChange={newValue => dispatch(changeArtist(newValue))}\n          />\n        <input\n          className=\"inputWrapper\" \n          type=\"number\"\n          name=\"addYear\"\n          value={year}\n          style={{top: '160px'}}\n          onChange={e => dispatch(changeYear(e.target.value))}\n          placeholder=\"Year\"/> \n        <InputPlusAutofill\n          className=\"inputWrapper\"\n          term={label? label: ''}\n          fromTop={130}\n          list={labelNames} \n          placeholder=\"Label\"\n          handleChange={newValue => dispatch(changeLabel(newValue))}\n          />\n        <div \n          className=\"inputWrapper\"\n          style={{top: '190px'}}>\n          <select \n            name=\"addSize\" \n            value={size}\n            \n            onChange={e => dispatch(changeSize(e.target.value))}>\n            <option value=\"12\">12\"</option>\n            <option value=\"10\">10\"</option>\n            <option value=\"7\">7\"</option>\n          </select>\n        </div>\n      </div>\n      <PicSelector />\n      <div className=\"footer\">\n        <button \n        onClick={e => addItem(e)}\n        type=\"submit\" >{version}</button>\n        <button onClick={() => dispatch(hideEditor())}>✖︎</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}