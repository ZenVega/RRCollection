{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Editor.js\";\n\n/* eslint-disable default-case */\nimport React from 'react';\nimport Autofill from './Autofill';\nimport PicSelector from './PicSelector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeRecord, changeArtist, changeLabel, changeSize, changeTitle, changeYear, addNewRecord, addNewLabel, changeImage, addNewArtist, hideEditor } from '../actions';\n\nfunction Editor() {\n  const dispatch = useDispatch();\n  const records = useSelector(state => state.collection.records);\n  const artists = useSelector(state => state.collection.artists);\n  const labels = useSelector(state => state.collection.labels);\n  const title = useSelector(state => state.record.title);\n  const artist = useSelector(state => state.record.artist);\n  const label = useSelector(state => state.record.label);\n  const year = useSelector(state => state.record.year);\n  const size = useSelector(state => state.record.size);\n  const cover = useSelector(state => state.record.cover_image);\n  const hidden = useSelector(state => state.editor);\n  const index = useSelector(state => state.currentIndex);\n  const version = useSelector(state => state.add);\n  const labelNames = labels.map(label => label.name);\n  const artistNames = artists.map(artist => artist.name);\n  const recordNames = records.map(record => record.title);\n\n  const handleChange = e => {\n    e.preventDefault();\n\n    switch (e.target.name) {\n      case \"addTitle\":\n        dispatch(changeTitle(e.target.value));\n        break;\n\n      case \"addArtist\":\n        dispatch(changeArtist(e.target.value));\n        break;\n\n      case \"addYear\":\n        dispatch(changeYear(e.target.value));\n        break;\n\n      case \"addLabel\":\n        dispatch(changeLabel(e.target.value));\n        break;\n\n      case \"addSize\":\n        dispatch(changeSize(e.target.value));\n        break;\n    }\n  };\n\n  const addItem = e => {\n    e.preventDefault();\n\n    if (!title || !artist) {\n      alert('');\n    }\n\n    console.log(index);\n\n    if (index !== undefined) {\n      console.log(index);\n      dispatch(removeRecord(index));\n    }\n\n    let artistID;\n    let artistObj = artists.find(inListArtist => inListArtist.name === artist);\n\n    if (artistObj) {\n      artistID = artistObj.artistID;\n    }\n\n    if (!artistID) {\n      artistID = Math.floor(Math.random() * 10 * 1000);\n      const artistToAdd = {\n        name: artist,\n        artistID: artistID\n      };\n      dispatch(addNewArtist(artistToAdd));\n    }\n\n    let labelID;\n    let labelObj = labels.find(inListLabel => inListLabel.name === label);\n\n    if (labelObj) {\n      labelID = labelObj.labelID;\n    }\n\n    if (!labelID) {\n      labelID = Math.floor(Math.random() * 10 * 1000);\n      const labelToAdd = {\n        name: label,\n        labelID: labelID\n      };\n      dispatch(addNewLabel(labelToAdd));\n    }\n\n    const recordToAdd = {\n      artistID,\n      title,\n      year,\n      size,\n      labelID,\n      cover_image: cover\n    };\n    dispatch(addNewRecord(recordToAdd));\n    dispatch(hideEditor());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"Editor\",\n    style: hidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"oneBlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \" \", version + ' record'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"addTitle\",\n    value: title,\n    onChange: e => handleChange(e),\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Autofill, {\n    className: \"Autofill\",\n    term: title,\n    array: recordNames,\n    setTerm: changeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"addArtist\",\n    value: artist,\n    onChange: e => handleChange(e),\n    placeholder: \"Artist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Autofill, {\n    className: \"Autofill\",\n    term: artist,\n    array: artistNames,\n    setTerm: changeArtist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"addYear\",\n    value: year,\n    onChange: e => handleChange(e),\n    placeholder: \"Year\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"addLabel\",\n    value: label,\n    onChange: e => handleChange(e),\n    placeholder: \"Label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Autofill, {\n    className: \"Autofill\",\n    term: label,\n    array: labelNames,\n    setTerm: changeLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"addSize\",\n    value: size,\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"12\\\"\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \"10\\\"\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"7\\\"\")))), /*#__PURE__*/React.createElement(PicSelector, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper oneLine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => addItem(e),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, version), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(hideEditor()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"\\u2716\\uFE0E\"))));\n}\n\nexport default Editor;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Editor.js"],"names":["React","Autofill","PicSelector","useSelector","useDispatch","removeRecord","changeArtist","changeLabel","changeSize","changeTitle","changeYear","addNewRecord","addNewLabel","changeImage","addNewArtist","hideEditor","Editor","dispatch","records","state","collection","artists","labels","title","record","artist","label","year","size","cover","cover_image","hidden","editor","index","currentIndex","version","add","labelNames","map","name","artistNames","recordNames","handleChange","e","preventDefault","target","value","addItem","alert","console","log","undefined","artistID","artistObj","find","inListArtist","Math","floor","random","artistToAdd","labelID","labelObj","inListLabel","labelToAdd","recordToAdd"],"mappings":"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","sourcesContent":["/* eslint-disable default-case */\nimport React from 'react';\nimport Autofill from './Autofill';\nimport PicSelector from './PicSelector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeRecord, changeArtist, changeLabel, changeSize, changeTitle, changeYear, addNewRecord, addNewLabel, changeImage, addNewArtist , hideEditor } from '../actions';\n\n\nfunction Editor(){\n\n  const dispatch = useDispatch();\n\n  const records = useSelector(state => state.collection.records);\n  const artists = useSelector(state => state.collection.artists);\n  const labels = useSelector(state => state.collection.labels);\n  \n  const title = useSelector(state => state.record.title);\n  const artist = useSelector(state => state.record.artist);\n  const label = useSelector(state => state.record.label);\n  const year = useSelector(state => state.record.year);\n  const size = useSelector(state => state.record.size);\n  const cover = useSelector(state => state.record.cover_image);\n  \n  const hidden = useSelector(state => state.editor);\n  const index = useSelector(state => state.currentIndex);\n  const version = useSelector(state => state.add);\n  \n  const labelNames = labels.map(label => label.name);\n  const artistNames = artists.map(artist => artist.name);\n  const recordNames = records.map(record => record.title);\n\n\n  \n\n  const handleChange = e => {\n\n    e.preventDefault();\n    \n    switch(e.target.name){\n      case \"addTitle\":\n      dispatch(changeTitle(e.target.value))\n      break;\n      case \"addArtist\":\n      dispatch(changeArtist(e.target.value))\n      break;\n      case \"addYear\":\n      dispatch(changeYear(e.target.value))\n      break;\n      case \"addLabel\":\n      dispatch(changeLabel(e.target.value))\n      break;\n      case \"addSize\":\n      dispatch(changeSize(e.target.value))\n      break;\n    }\n  }\n\n\n  const addItem = e => {\n\n    e.preventDefault();\n\n    if(!title || !artist){\n      alert('')\n    }\n\n\n    console.log(index);\n\n    if(index !== undefined){\n      console.log(index);\n      dispatch(removeRecord(index));\n    }\n\n    let artistID;\n    let artistObj = artists.find(inListArtist => inListArtist.name === artist);\n    if(artistObj){\n      artistID = artistObj.artistID;\n    }\n\n    if(!artistID){\n      artistID = Math.floor(Math.random()*10*1000);\n      const artistToAdd = {\n        name: artist,\n        artistID: artistID\n      };\n      dispatch(addNewArtist(artistToAdd))\n    }\n\n\n    let labelID;\n    let labelObj = labels.find(inListLabel => inListLabel.name === label);\n    if(labelObj){\n      labelID = labelObj.labelID;\n    }\n\n    if(!labelID){\n      labelID = Math.floor(Math.random()*10*1000);\n      const labelToAdd = {\n        name: label,\n        labelID: labelID\n      };\n      dispatch(addNewLabel(labelToAdd))\n    }\n\n\n    const recordToAdd = {\n      artistID,\n      title,\n      year,\n      size,\n      labelID,\n      cover_image: cover\n    };\n    dispatch(addNewRecord(recordToAdd));\n    dispatch(hideEditor());\n  }\n\n\n\n  return(\n    <div>\n      <form className=\"Editor\"\n            style={hidden}>\n        <div className=\"oneBlock\">\n          <h2> {version + ' record'}</h2>\n          <div className=\"inputWrapper\">\n            <input \n              type=\"text\"\n              name=\"addTitle\"\n              value={title}\n              onChange={e => handleChange(e)}\n              placeholder=\"Title\"/>  \n            <Autofill\n              className=\"Autofill\"\n              term={title}\n              array={recordNames} \n              setTerm={changeTitle}/>\n          </div>\n          <div className=\"inputWrapper\">\n            <input \n              type=\"text\"\n              name=\"addArtist\"\n              value={artist}\n              onChange={e => handleChange(e)}\n              placeholder=\"Artist\"/> \n              <Autofill\n              className=\"Autofill\"\n              term={artist}\n              array={artistNames} \n              setTerm={changeArtist}/>\n            </div>\n          <div className=\"inputWrapper\">\n            <input \n              type=\"number\"\n              name=\"addYear\"\n              value={year}\n              onChange={e => handleChange(e)}\n              placeholder=\"Year\"/> \n            </div>\n          <div className=\"inputWrapper\">\n            <input \n              type=\"text\"\n              name=\"addLabel\"\n              value={label}\n              onChange={e => handleChange(e)}\n              placeholder=\"Label\"/> \n            <Autofill\n              className=\"Autofill\"\n              term={label}\n              array={labelNames} \n              setTerm={changeLabel}/>\n          </div>\n          <div className=\"inputWrapper\">\n            <select \n              name=\"addSize\" \n              value={size}\n              onChange={e => handleChange(e)}>\n              <option value=\"12\">12\"</option>\n              <option value=\"10\">10\"</option>\n              <option value=\"7\">7\"</option>\n            </select>\n          </div>\n        </div>\n        <PicSelector />\n        <div className=\"inputWrapper oneLine\">\n          <button \n          onClick={e => addItem(e)}\n          type=\"submit\" >{version}</button>\n          <button onClick={() => dispatch(hideEditor())}>✖︎</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}