{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/App.js\";\nimport React, { useState } from 'react';\nimport Searchbar from './SearchBar';\nimport Editor from './Editor';\nimport Collection from './Collection';\nimport SearchResults from './SearchResults';\nimport Discogs from './util/Discogs';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeArtist, changeLabel, changeSize, changeTitle, changeYear, addNewRecord, addNewLabel, addNewArtist } from '../actions';\n\nfunction App() {\n  const records = useSelector(state => state.collection.records);\n  const labels = useSelector(state => state.collection.labels);\n  const artists = useSelector(state => state.collection.artists);\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState([]);\n  const [type, setType] = useState(\"release_title\");\n  const [hidden, setHidden] = useState({\n    display: 'none'\n  });\n  const [cause, setCause] = useState(\"edit\");\n  const [version, setVersion] = useState({\n    header: 'Add Record',\n    button: \"Add\"\n  });\n\n  const handleSearch = (term, type) => {\n    Discogs.search(term, type).then(response => setSearch(response.results));\n  };\n\n  const sortBy = interest => {\n    setType(interest);\n  };\n\n  const addRecord = (artist, title, year, label, size) => {\n    let artistID;\n    let artistObj = artists.find(inListArtist => inListArtist.name === artist);\n\n    if (artistObj) {\n      artistID = artistObj.artistID;\n    }\n\n    if (!artistID) {\n      artistID = Math.floor(Math.random() * 10 * 1000);\n      const artistToAdd = {\n        name: artist,\n        artistID: artistID\n      };\n      dispatch(addNewArtist(artistToAdd));\n    }\n\n    let labelID;\n    let labelObj = labels.find(inListLabel => inListLabel.name === label);\n\n    if (labelObj) {\n      labelID = labelObj.labelID;\n    }\n\n    if (!labelID) {\n      labelID = Math.floor(Math.random() * 10 * 1000);\n      const labelToAdd = {\n        name: label,\n        labelID: labelID\n      };\n      dispatch(addNewLabel(labelToAdd));\n    }\n\n    const recordToAdd = {\n      artistID,\n      title,\n      year,\n      size,\n      labelID\n    };\n    dispatch(addNewRecord(recordToAdd));\n  };\n\n  const passForSuggestions = (array, topic) => {\n    let suggestions = [];\n    array.map(element => suggestions.push(element[topic]));\n    return suggestions;\n  };\n\n  const changeVersion = () => {\n    if (cause === \"add\") {\n      setVersion({\n        header: 'Add Record',\n        button: \"Add\"\n      });\n    } else {\n      setVersion({\n        header: 'Edit Record',\n        button: \"Save Changes\"\n      });\n    }\n  };\n\n  const showEditor = index => {\n    if (typeof index === 'number') {\n      console.log(records[index].size);\n      dispatch(changeTitle(records[index].title));\n      dispatch(changeYear(records[index].year));\n      dispatch(changeSize(records[index].size));\n      dispatch(changeArtist(artists.filter(artist => artist.artistID === records[index].artistID)[0].name));\n      dispatch(changeLabel(labels.filter(label => label.labelID === records[index].labelID)[0].name));\n    }\n\n    setCause(index);\n    changeVersion();\n    setHidden({\n      display: \"flex\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Searchbar, {\n    searchFor: type,\n    onSearch: handleSearch,\n    showEditor: showEditor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Editor, {\n    index: cause,\n    version: version,\n    style: hidden,\n    setHidden: setHidden,\n    onAdd: addRecord,\n    titles: passForSuggestions(records, \"title\"),\n    artists: passForSuggestions(artists, \"name\"),\n    labels: passForSuggestions(labels, \"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SearchResults, {\n    isHidden: hidden,\n    results: search,\n    onAdd: addRecord,\n    sort: sortBy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Collection, {\n    showEditor: showEditor,\n    labels: labels,\n    artists: artists,\n    records: records,\n    removeRecord: removeRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/App.js"],"names":["React","useState","Searchbar","Editor","Collection","SearchResults","Discogs","useSelector","useDispatch","changeArtist","changeLabel","changeSize","changeTitle","changeYear","addNewRecord","addNewLabel","addNewArtist","App","records","state","collection","labels","artists","dispatch","search","setSearch","type","setType","hidden","setHidden","display","cause","setCause","version","setVersion","header","button","handleSearch","term","then","response","results","sortBy","interest","addRecord","artist","title","year","label","size","artistID","artistObj","find","inListArtist","name","Math","floor","random","artistToAdd","labelID","labelObj","inListLabel","labelToAdd","recordToAdd","passForSuggestions","array","topic","suggestions","map","element","push","changeVersion","showEditor","index","console","log","filter","removeRecord"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport Searchbar from './SearchBar';\nimport Editor from './Editor';\nimport Collection from './Collection';\nimport SearchResults from './SearchResults';\nimport Discogs from './util/Discogs';\nimport './App.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeArtist, changeLabel, changeSize, changeTitle, changeYear, addNewRecord, addNewLabel, addNewArtist } from '../actions';\n\n\n\nfunction App() {\n\n  const records = useSelector(state => state.collection.records)\n  const labels = useSelector(state => state.collection.labels)\n  const artists = useSelector(state => state.collection.artists)\n  const dispatch = useDispatch();\n\n  const [search, setSearch] = useState([]);\n  const [type, setType] = useState(\"release_title\");\n  const [hidden, setHidden] = useState({display: 'none'});\n  const [cause, setCause] = useState(\"edit\");\n  \n  const [version, setVersion] = useState(\n    {\n    header: 'Add Record',\n    button: \"Add\"\n    }\n  )\n\n\n  const handleSearch = (term, type) => {\n    Discogs.search(term, type).then(response => setSearch(response.results));\n  }\n\n  const sortBy = (interest) => {\n      setType(interest)\n  }\n\n  const addRecord = (artist, title, year, label, size) => {\n\n    let artistID;\n    let artistObj = artists.find(inListArtist => inListArtist.name === artist);\n    if(artistObj){\n      artistID = artistObj.artistID;\n    }\n\n    if(!artistID){\n      artistID = Math.floor(Math.random()*10*1000);\n\n      const artistToAdd = {\n        name: artist,\n        artistID: artistID\n      };\n      dispatch(addNewArtist(artistToAdd))\n    }\n\n\n    let labelID;\n    let labelObj = labels.find(inListLabel => inListLabel.name === label);\n    if(labelObj){\n      labelID = labelObj.labelID;\n    }\n\n    if(!labelID){\n      labelID = Math.floor(Math.random()*10*1000);\n\n      const labelToAdd = {\n        name: label,\n        labelID: labelID\n      };\n      dispatch(addNewLabel(labelToAdd))\n    }\n\n\n    const recordToAdd = {\n      artistID,\n      title,\n      year,\n      size,\n      labelID\n    };\n\n    dispatch(addNewRecord(recordToAdd));\n  }\n\n\n\n  const passForSuggestions = (array, topic) => {\n    let suggestions = [];\n    array.map(element => suggestions.push(element[topic]));\n    return suggestions;\n  }\n\n\n  const changeVersion = () => {\n    if(cause === \"add\") {\n      setVersion(\n        {\n          header: 'Add Record',\n          button: \"Add\"\n        }\n      )\n    } else {\n      setVersion(\n        {\n          header: 'Edit Record',\n          button: \"Save Changes\"\n        }\n      )\n    }\n  };\n\n\n  const showEditor = (index) => {\n    if(typeof index === 'number'){\n      console.log(records[index].size);\n      dispatch(changeTitle(records[index].title));\n      dispatch(changeYear(records[index].year));\n      dispatch(changeSize(records[index].size));\n      dispatch(changeArtist(artists.filter(artist => artist.artistID === records[index].artistID)[0].name));\n      dispatch(changeLabel(labels.filter(label => label.labelID === records[index].labelID)[0].name));\n    }\n   setCause(index);\n   changeVersion();\n   setHidden({ display: \"flex\" });\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Searchbar \n        searchFor={type}\n        onSearch={handleSearch}\n        showEditor={showEditor}\n        />\n      <Editor\n        index = {cause}\n        version={version}\n        style={hidden}\n        setHidden={setHidden}\n        onAdd={addRecord} \n        titles={passForSuggestions(records, \"title\")}\n        artists={passForSuggestions(artists, \"name\")}\n        labels={passForSuggestions(labels, \"name\")}/>\n      <SearchResults \n        isHidden={hidden} \n        results={search} \n        onAdd={addRecord}\n        sort={sortBy}/>\n      <Collection \n        showEditor={showEditor}\n        labels={labels}\n        artists={artists}\n        records={records}\n        removeRecord={removeRecord}/>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}