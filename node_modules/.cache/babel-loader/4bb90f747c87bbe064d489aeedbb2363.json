{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Collection.js\";\nimport React from 'react';\nimport Record from './Record';\nimport { useSelector } from 'react-redux';\n\nfunction Collection({\n  showEditor\n}) {\n  let artists = useSelector(state => state.collection.artists);\n  let labels = useSelector(state => state.collection.labels);\n  let records = useSelector(state => state.collection.records);\n\n  const displayArtist = id => {\n    let currentArtist = artists.find(artist => artist.artistID === id);\n\n    try {\n      return currentArtist.name;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const displayLabel = id => {\n    let currentLabel = labels.find(label => label.labelID === id);\n\n    try {\n      return currentLabel.name;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const sortBy = term => {\n    const compare = (a, b) => {\n      let objA;\n      let objB;\n\n      if (term === 'title') {\n        objA = a[term].toUpperCase();\n        objB = b[term].toUpperCase();\n      } else if (term === 'artist') {\n        objA = artists.find(artist => artist.artistID === a.artistID).name.toUpperCase();\n        objB = artists.find(artist => artist.artistID === b.artistID).name.toUpperCase();\n      }\n\n      let comparison = 0;\n\n      if (objA > objB) {\n        comparison = 1;\n      } else if (objA < objB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    };\n\n    let newOrder = records.sort(compare());\n    return newOrder;\n  };\n\n  return newOrder.map((record, index) => /*#__PURE__*/React.createElement(Record, {\n    showEditor: showEditor,\n    key: index,\n    index: index,\n    artist: displayArtist(record.artistID),\n    title: record.title,\n    year: record.year,\n    label: displayLabel(record.labelID),\n    size: record.size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n  sortBy('title');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, sortBy('title'));\n}\n\nexport default Collection;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Collection.js"],"names":["React","Record","useSelector","Collection","showEditor","artists","state","collection","labels","records","displayArtist","id","currentArtist","find","artist","artistID","name","err","console","log","displayLabel","currentLabel","label","labelID","sortBy","term","compare","a","b","objA","objB","toUpperCase","comparison","newOrder","sort","map","record","index","title","year","size"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Record from './Record';\nimport { useSelector } from 'react-redux';\n\n\n\nfunction Collection ({showEditor}){\n\n  let artists = useSelector(state => state.collection.artists);\n  let labels = useSelector(state => state.collection.labels);\n  let records = useSelector(state => state.collection.records);\n\n  const displayArtist = (id) => {\n    let currentArtist = artists.find(artist => artist.artistID === id)\n    try{\n      return currentArtist.name;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  const displayLabel = (id) => {\n    let currentLabel = labels.find(label => label.labelID === id)\n    try{\n      return currentLabel.name;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  const sortBy = (term) => {\n\n    const compare = (a, b) => {\n      let objA;\n      let objB;\n\n      if(term === 'title'){\n        objA = a[term].toUpperCase();\n        objB = b[term].toUpperCase();  \n      } else if(term === 'artist'){\n        objA = artists.find(artist => artist.artistID === a.artistID).name.toUpperCase();\n        objB = artists.find(artist => artist.artistID === b.artistID).name.toUpperCase();\n      }\n      \n      let comparison = 0;\n      if (objA > objB) {\n        comparison = 1;\n      } else if (objA < objB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n\n    let newOrder = records.sort(compare());\n\n    return newOrder;\n\n  }\n\n    \n    return newOrder.map((record, index) => (\n      <Record \n        showEditor={showEditor}\n        key={index}\n        index={index}\n        artist={displayArtist(record.artistID)}\n        title={record.title}\n        year={record.year}\n        label={displayLabel(record.labelID)}\n        size={record.size}/>\n    ))\n\n\n  \n\n  sortBy('title')\n \n  return(\n    <div className=\"Collection\">\n      {sortBy('title')}\n    </div>\n  )\n}\nexport default Collection;"]},"metadata":{},"sourceType":"module"}