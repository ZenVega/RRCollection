{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Collection.js\";\nimport React from 'react';\nimport Record from './Record';\nimport { useSelector } from 'react-redux';\n\nfunction Collection({\n  showEditor\n}) {\n  let artists = useSelector(state => state.collection.artists);\n  let labels = useSelector(state => state.collection.labels);\n  let records = useSelector(state => state.collection.records);\n\n  const displayArtist = id => {\n    let currentArtist = artists.find(artist => artist.artistID === id);\n\n    try {\n      return currentArtist.name;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const displayLabel = id => {\n    let currentLabel = labels.find(label => label.labelID === id);\n\n    try {\n      return currentLabel.name;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const sortBy = term => {\n    if (term === 'title') {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, records.map((record, index) => /*#__PURE__*/React.createElement(Record, {\n    showEditor: showEditor,\n    key: index,\n    index: index,\n    artist: displayArtist(record.artistID),\n    title: record.title,\n    year: record.year,\n    label: displayLabel(record.labelID),\n    size: record.size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Collection;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Collection.js"],"names":["React","Record","useSelector","Collection","showEditor","artists","state","collection","labels","records","displayArtist","id","currentArtist","find","artist","artistID","name","err","console","log","displayLabel","currentLabel","label","labelID","sortBy","term","map","record","index","title","year","size"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAIA,SAASC,UAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAkC;AAEhC,MAAIC,OAAO,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBF,OAA3B,CAAzB;AACA,MAAIG,MAAM,GAAGN,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBC,MAA3B,CAAxB;AACA,MAAIC,OAAO,GAAGP,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBE,OAA3B,CAAzB;;AAEA,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAC5B,QAAIC,aAAa,GAAGP,OAAO,CAACQ,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACC,QAAP,KAAoBJ,EAA3C,CAApB;;AACA,QAAG;AACD,aAAOC,aAAa,CAACI,IAArB;AACD,KAFD,CAEC,OAAMC,GAAN,EAAU;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAPD;;AASA,QAAMG,YAAY,GAAIT,EAAD,IAAQ;AAC3B,QAAIU,YAAY,GAAGb,MAAM,CAACK,IAAP,CAAYS,KAAK,IAAIA,KAAK,CAACC,OAAN,KAAkBZ,EAAvC,CAAnB;;AACA,QAAG;AACD,aAAOU,YAAY,CAACL,IAApB;AACD,KAFD,CAEC,OAAMC,GAAN,EAAU;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAPD;;AASA,QAAMO,MAAM,GAAIC,IAAD,IAAU;AAEvB,QAAGA,IAAI,KAAK,OAAZ,EAAoB,CAEnB;AAIF,GARD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,OAAO,CAACiB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACX,oBAAC,MAAD;AACE,IAAA,UAAU,EAAExB,UADd;AAEE,IAAA,GAAG,EAAEwB,KAFP;AAGE,IAAA,KAAK,EAAEA,KAHT;AAIE,IAAA,MAAM,EAAElB,aAAa,CAACiB,MAAM,CAACZ,QAAR,CAJvB;AAKE,IAAA,KAAK,EAAEY,MAAM,CAACE,KALhB;AAME,IAAA,IAAI,EAAEF,MAAM,CAACG,IANf;AAOE,IAAA,KAAK,EAAEV,YAAY,CAACO,MAAM,CAACJ,OAAR,CAPrB;AAQE,IAAA,IAAI,EAAEI,MAAM,CAACI,IARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAeD;;AACD,eAAe5B,UAAf","sourcesContent":["import React from 'react';\nimport Record from './Record';\nimport { useSelector } from 'react-redux';\n\n\n\nfunction Collection ({showEditor}){\n\n  let artists = useSelector(state => state.collection.artists);\n  let labels = useSelector(state => state.collection.labels);\n  let records = useSelector(state => state.collection.records);\n\n  const displayArtist = (id) => {\n    let currentArtist = artists.find(artist => artist.artistID === id)\n    try{\n      return currentArtist.name;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  const displayLabel = (id) => {\n    let currentLabel = labels.find(label => label.labelID === id)\n    try{\n      return currentLabel.name;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  const sortBy = (term) => {\n\n    if(term === 'title'){\n      \n    }\n    \n    \n\n  }\n  \n\n  return(\n    <div className=\"Collection\">\n      {records.map((record, index) => (\n        <Record \n          showEditor={showEditor}\n          key={index}\n          index={index}\n          artist={displayArtist(record.artistID)}\n          title={record.title}\n          year={record.year}\n          label={displayLabel(record.labelID)}\n          size={record.size}/>\n      ))}\n    </div>\n  )\n}\nexport default Collection;"]},"metadata":{},"sourceType":"module"}