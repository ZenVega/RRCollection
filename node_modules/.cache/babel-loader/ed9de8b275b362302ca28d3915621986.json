{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Collection.js\";\nimport React from 'react';\nimport Record from './Record';\nimport { useSelector } from 'react-redux';\n\nfunction Collection({\n  showEditor\n}) {\n  let artists = useSelector(state => state.collection.artists);\n  let labels = useSelector(state => state.collection.labels);\n  let records = useSelector(state => state.collection.records);\n\n  const displayArtist = id => {\n    let currentArtist = artists.find(artist => artist.artistID === id);\n\n    try {\n      return currentArtist.name;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const displayLabel = id => {\n    let currentLabel = labels.find(label => label.labelID === id);\n\n    try {\n      return currentLabel.name;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const sortBy = term => {\n    const compare = (a, b) => {\n      console.log(a);\n      let objA;\n      let objB;\n\n      if (term === 'title') {\n        objA = a.title.toUpperCase();\n        objB = b.title.toUpperCase();\n      } else if (term === 'artist') {\n        objA = artists.find(artist => artist.artistID === a.artistID).name.toUpperCase();\n        objB = artists.find(artist => artist.artistID === b.artistID).name.toUpperCase();\n      }\n\n      let comparison = 0;\n\n      if (objA > objB) {\n        comparison = 1;\n      } else if (objA < objB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    };\n\n    let newOrder = records.sort(compare());\n    console.log(newOrder);\n    return newOrder.map((record, index) => /*#__PURE__*/React.createElement(Record, {\n      showEditor: showEditor,\n      key: index,\n      index: index,\n      artist: displayArtist(record.artistID),\n      title: record.title,\n      year: record.year,\n      label: displayLabel(record.labelID),\n      size: record.size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  sortBy('title');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, sortBy('title'));\n}\n\nexport default Collection;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Collection.js"],"names":["React","Record","useSelector","Collection","showEditor","artists","state","collection","labels","records","displayArtist","id","currentArtist","find","artist","artistID","name","err","console","log","displayLabel","currentLabel","label","labelID","sortBy","term","compare","a","b","objA","objB","title","toUpperCase","comparison","newOrder","sort","map","record","index","year","size"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Record from './Record';\nimport { useSelector } from 'react-redux';\n\n\n\nfunction Collection ({showEditor}){\n\n  let artists = useSelector(state => state.collection.artists);\n  let labels = useSelector(state => state.collection.labels);\n  let records = useSelector(state => state.collection.records);\n\n  const displayArtist = (id) => {\n    let currentArtist = artists.find(artist => artist.artistID === id)\n    try{\n      return currentArtist.name;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  const displayLabel = (id) => {\n    let currentLabel = labels.find(label => label.labelID === id)\n    try{\n      return currentLabel.name;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  const sortBy = (term) => {\n\n    const compare = (a, b) => {\n      console.log(a)\n      let objA;\n      let objB;\n\n      if(term === 'title'){\n        objA = a.title.toUpperCase();\n        objB = b.title.toUpperCase();  \n      } else if(term === 'artist'){\n        objA = artists.find(artist => artist.artistID === a.artistID).name.toUpperCase();\n        objB = artists.find(artist => artist.artistID === b.artistID).name.toUpperCase();\n      }\n      \n      let comparison = 0;\n      if (objA > objB) {\n        comparison = 1;\n      } else if (objA < objB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n\n    let newOrder = records.sort(compare());\n    console.log(newOrder)\n\n\n    return newOrder.map((record, index) => (\n      <Record \n        showEditor={showEditor}\n        key={index}\n        index={index}\n        artist={displayArtist(record.artistID)}\n        title={record.title}\n        year={record.year}\n        label={displayLabel(record.labelID)}\n        size={record.size}/>\n    ))\n  }\n\n  \n\n  sortBy('title')\n \n  return(\n    <div className=\"Collection\">\n      {sortBy('title')}\n    </div>\n  )\n}\nexport default Collection;"]},"metadata":{},"sourceType":"module"}