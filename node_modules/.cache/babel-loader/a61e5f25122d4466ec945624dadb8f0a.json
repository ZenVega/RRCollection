{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/SearchResults.js\";\nimport React from 'react';\nimport Record from './Record';\nlet type = \"master\";\n\nconst presentResults = (results, onAdd) => {\n  if (!results) {\n    return;\n  } else {\n    const filterArtist = result => result.type !== \"artist\";\n\n    const filterResults = result => result.type !== \"results\";\n\n    let filtered = results.filter(filterArtist).filter(filterResults);\n    return filtered.map((record, index) => {\n      return /*#__PURE__*/React.createElement(Record, {\n        key: record.id,\n        index: index,\n        title: record.title,\n        onAdd: onAdd,\n        year: record.year,\n        img: record.cover_image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n};\n\nconst sortBy = interest => {\n  setType(interest);\n};\n\nfunction SearchResults({\n  results,\n  onAdd,\n  isHidden\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchResults\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Wrapper\",\n    style: {\n      isHidden\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, presentResults(results, type, onAdd)));\n}\n\nexport default SearchResults;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/SearchResults.js"],"names":["React","Record","type","presentResults","results","onAdd","filterArtist","result","filterResults","filtered","filter","map","record","index","id","title","year","cover_image","sortBy","interest","setType","SearchResults","isHidden"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAIC,IAAI,GAAG,QAAX;;AAEA,MAAMC,cAAc,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACzC,MAAG,CAACD,OAAJ,EAAY;AACV;AACD,GAFD,MAEO;AACL,UAAME,YAAY,GAAGC,MAAM,IAAIA,MAAM,CAACL,IAAP,KAAgB,QAA/C;;AACA,UAAMM,aAAa,GAAGD,MAAM,IAAIA,MAAM,CAACL,IAAP,KAAgB,SAAhD;;AACA,QAAIO,QAAQ,GAAGL,OAAO,CAACM,MAAR,CAAeJ,YAAf,EAA6BI,MAA7B,CAAoCF,aAApC,CAAf;AACA,WAAOC,QAAQ,CAACE,GAAT,CAAa,CAACC,MAAD,EAASC,KAAT,KAAmB;AACrC,0BAAO,oBAAC,MAAD;AACL,QAAA,GAAG,EAAED,MAAM,CAACE,EADP;AAEL,QAAA,KAAK,EAAED,KAFF;AAGL,QAAA,KAAK,EAAED,MAAM,CAACG,KAHT;AAIL,QAAA,KAAK,EAAEV,KAJF;AAKL,QAAA,IAAI,EAAEO,MAAM,CAACI,IALR;AAML,QAAA,GAAG,EAAEJ,MAAM,CAACK,WANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOD,KARM,CAAP;AASD;AACF,CAjBD;;AAmBA,MAAMC,MAAM,GAAIC,QAAD,IAAc;AAC3BC,EAAAA,OAAO,CAACD,QAAD,CAAP;AACD,CAFD;;AAIA,SAASE,aAAT,CAAuB;AAACjB,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBiB,EAAAA;AAAjB,CAAvB,EAAmD;AACjD,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAACA,MAAAA;AAAD,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,cAAc,CAACC,OAAD,EAAUF,IAAV,EAAgBG,KAAhB,CADjB,CADF,CADF;AAOD;;AAED,eAAegB,aAAf","sourcesContent":["import React from 'react';\nimport Record from './Record';\n\nlet type = \"master\";\n\nconst presentResults = (results, onAdd) => {\n  if(!results){\n    return;\n  } else {\n    const filterArtist = result => result.type !== \"artist\";\n    const filterResults = result => result.type !== \"results\";\n    let filtered = results.filter(filterArtist).filter(filterResults);\n    return filtered.map((record, index) => {\n      return <Record \n        key={record.id}\n        index={index}\n        title={record.title} \n        onAdd={onAdd}\n        year={record.year}\n        img={record.cover_image}/>\n    })\n  }\n}\n\nconst sortBy = (interest) => {\n  setType(interest)\n}\n\nfunction SearchResults({results, onAdd, isHidden}) {\n  return(\n    <div className=\"searchResults\">\n      <div className=\"Wrapper\" style={{isHidden}}>\n        {presentResults(results, type, onAdd)} \n      </div>\n    </div>\n  )\n}\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}