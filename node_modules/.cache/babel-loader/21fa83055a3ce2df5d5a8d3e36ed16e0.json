{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/PicSelector.js\";\nimport React, { useState } from 'react';\nimport Discogs from './util/Discogs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeImage, updateImageArray } from '../actions';\nlet counter = 0;\n\nfunction PicSelector() {\n  const dispatch = useDispatch();\n  const title = useSelector(state => state.record.title);\n  const artist = useSelector(state => state.record.artist);\n  const imageArray = useSelector(state => state.variables.imageArray);\n  const [counter, setCounter] = useState(0);\n\n  const imageSwap = (e, plus) => {\n    e.preventDefault();\n\n    if (plus) {\n      if (counter <= imageArray) setCounter(counter + 1);\n    } else {\n      setCounter(counter - 1);\n    }\n\n    console.log(counter);\n    console.log(imageArray);\n  };\n\n  const findImage = e => {\n    e.preventDefault();\n    let titleQuery = title.replace(/ /g, '+');\n    let artistQuery = artist.replace(/ /g, '+');\n    let term = `${titleQuery}+${artistQuery}`;\n    Discogs.search(term).then(res => res.results.map(result => result.cover_image)).then(res => res.filter(url => url !== \"https://img.discogs.com/82ab9e449b349e00ce86eb994af66f5b3d1b5bc2/images/spacer.gif\")).then(res => dispatch(updateImageArray(res)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imgBox oneLine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => findImage(e),\n    id: \"findBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Find Cover\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"imageSwitches\",\n    id: \"prevBtn\",\n    onClick: e => imageSwap(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"prev\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"imageSwitches\",\n    id: \"nextBtn\",\n    onClick: e => imageSwap(e, 'plus'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"next\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"previewImage\",\n    src: imageArray[counter],\n    alt: \"album_cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"imageGetter\",\n    type: \"text\",\n    placeholder: \"or insert imageUrl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"imageGetterBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \" upload\"));\n}\n\nexport default PicSelector;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/PicSelector.js"],"names":["React","useState","Discogs","useSelector","useDispatch","changeImage","updateImageArray","counter","PicSelector","dispatch","title","state","record","artist","imageArray","variables","setCounter","imageSwap","e","plus","preventDefault","console","log","findImage","titleQuery","replace","artistQuery","term","search","then","res","results","map","result","cover_image","filter","url"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Discogs from './util/Discogs';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { changeImage, updateImageArray } from '../actions';\n\nlet counter = 0;\n\n\nfunction PicSelector () {\n  const dispatch = useDispatch()\n  const title = useSelector(state => state.record.title);\n  const artist = useSelector(state => state.record.artist);\n\n  const imageArray = useSelector(state => state.variables.imageArray);\n  const [counter, setCounter] = useState(0);\n\n  const imageSwap = (e, plus) => {\n    e.preventDefault();\n    if(plus){\n        if(counter <= imageArray)\n      setCounter(counter + 1);\n    } else{\n      setCounter(counter - 1);\n    }\n    console.log(counter);\n    console.log(imageArray)\n  }\n\n  const findImage = e => {\n    e.preventDefault();\n\n    let titleQuery = title.replace(/ /g, '+');\n    let artistQuery = artist.replace(/ /g, '+');\n    let term = `${titleQuery}+${artistQuery}`;\n    \n    Discogs.search(term).then(res =>  res.results.map(result => result.cover_image)).then(res => res.filter(url => url !== \"https://img.discogs.com/82ab9e449b349e00ce86eb994af66f5b3d1b5bc2/images/spacer.gif\")).then(res => dispatch(updateImageArray(res)))\n  }\n\n  return(\n    <div className=\"imgBox oneLine\">\n      <button \n        onClick={e => findImage(e)}\n        id=\"findBtn\">Find Cover</button>\n      <button \n        className=\"imageSwitches\" \n        id=\"prevBtn\"\n        onClick={(e) => imageSwap(e)}>prev</button>\n      <button \n        className=\"imageSwitches\" \n        id=\"nextBtn\"\n        onClick={(e) => imageSwap(e,'plus')}>next</button>\n      <img \n        className=\"previewImage\" \n        src={imageArray[counter]} \n        alt=\"album_cover\" />\n      <input \n        id=\"imageGetter\" \n        type=\"text\"\n        placeholder=\"or insert imageUrl\"/>\n      <button id=\"imageGetterBtn\"> upload</button>  \n    </div>\n  )\n}\n\nexport default PicSelector;"]},"metadata":{},"sourceType":"module"}