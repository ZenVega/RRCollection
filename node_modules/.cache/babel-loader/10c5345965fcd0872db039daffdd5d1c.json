{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Autofill.js\";\nimport React, { Fragment } from 'react';\n\nfunction Autofill({\n  term,\n  array,\n  setTerm\n}) {\n  const returnSuggestions = (term, array, setTerm) => {\n    //find match\n    if (!term) {\n      return [];\n    }\n\n    ;\n    let suggestions = array.filter(string => string.toLowerCase().indexOf(term.toLowerCase()) > -1);\n    return suggestions.map(suggestion => /*#__PURE__*/React.createElement(\"p\", {\n      className: \"suggestion\",\n      onClick: () => setTerm(suggestion),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }, suggestion));\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, returnSuggestions(term, array, setTerm));\n}\n\nexport default Autofill;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Autofill.js"],"names":["React","Fragment","Autofill","term","array","setTerm","returnSuggestions","suggestions","filter","string","toLowerCase","indexOf","map","suggestion"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAASC,QAAT,CAAmB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAnB,EAA2C;AAKzC,QAAMC,iBAAiB,GAAG,CAACH,IAAD,EAAOC,KAAP,EAAcC,OAAd,KAA0B;AACpD;AACA,QAAG,CAACF,IAAJ,EAAS;AAAE,aAAO,EAAP;AAAU;;AAAA;AACrB,QAAII,WAAW,GAAGH,KAAK,CAACI,MAAN,CAChBC,MAAM,IAAIA,MAAM,CAACC,WAAP,GAAqBC,OAArB,CAA6BR,IAAI,CAACO,WAAL,EAA7B,IAAmD,CAAC,CAD9C,CAAlB;AAGE,WAAOH,WAAW,CAACK,GAAZ,CAAgBC,UAAU,iBACjC;AAAG,MAAA,SAAS,EAAC,YAAb;AAA0B,MAAA,OAAO,EAAE,MAAIR,OAAO,CAACQ,UAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6DA,UAA7D,CADO,CAAP;AAGD,GATD;;AAWA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,iBAAiB,CAACH,IAAD,EAAOC,KAAP,EAAcC,OAAd,CADpB,CADF;AAMD;;AAED,eAAeH,QAAf","sourcesContent":["import React, {Fragment} from 'react';\n\nfunction Autofill ({term, array, setTerm}) {\n \n\n\n\n  const returnSuggestions = (term, array, setTerm) => {\n  //find match\n  if(!term){ return []};\n  let suggestions = array.filter(\n    string => string.toLowerCase().indexOf(term.toLowerCase()) > -1);\n\n    return suggestions.map(suggestion => (\n    <p className=\"suggestion\" onClick={()=>setTerm(suggestion)}>{suggestion}</p>\n    ))\n  }\n\n  return(\n    <Fragment>\n      {returnSuggestions(term, array, setTerm)}\n    </Fragment>\n  )\n\n}\n\nexport default Autofill;"]},"metadata":{},"sourceType":"module"}