{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Collection.js\";\nimport React from 'react';\nimport Record from './Record';\nimport { useSelector } from 'react-redux';\n\nfunction Collection({\n  showEditor\n}) {\n  let artists = useSelector(state => state.collection.artists);\n  let labels = useSelector(state => state.collection.labels);\n  let records = useSelector(state => state.collection.records);\n\n  const displayArtist = id => {\n    let currentArtist = artists.find(artist => artist.artistID === id);\n\n    try {\n      return currentArtist.name;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const displayLabel = id => {\n    let currentLabel = labels.find(label => label.labelID === id);\n\n    try {\n      return currentLabel.name;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const sortBy = term => {\n    const compare = (a, b, term) => {\n      const objA = a[term].toUpperCase();\n      const objB = b[term].toUpperCase();\n      let comparison = 0;\n\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    };\n\n    let recordsSorted = records.map(record => record[term]).sort(); //console.log(records.map(record => recordsSorted.find(title => title === record.title)))\n\n    console.log(records.sort((a, b) => a.title - b.title));\n  };\n\n  sortBy();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, records.map((record, index) => /*#__PURE__*/React.createElement(Record, {\n    showEditor: showEditor,\n    key: index,\n    index: index,\n    artist: displayArtist(record.artistID),\n    title: record.title,\n    year: record.year,\n    label: displayLabel(record.labelID),\n    size: record.size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Collection;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Collection.js"],"names":["React","Record","useSelector","Collection","showEditor","artists","state","collection","labels","records","displayArtist","id","currentArtist","find","artist","artistID","name","err","console","log","displayLabel","currentLabel","label","labelID","sortBy","term","compare","a","b","objA","toUpperCase","objB","comparison","bandA","bandB","recordsSorted","map","record","sort","title","index","year","size"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Record from './Record';\nimport { useSelector } from 'react-redux';\n\n\n\nfunction Collection ({showEditor}){\n\n  let artists = useSelector(state => state.collection.artists);\n  let labels = useSelector(state => state.collection.labels);\n  let records = useSelector(state => state.collection.records);\n\n  const displayArtist = (id) => {\n    let currentArtist = artists.find(artist => artist.artistID === id)\n    try{\n      return currentArtist.name;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  const displayLabel = (id) => {\n    let currentLabel = labels.find(label => label.labelID === id)\n    try{\n      return currentLabel.name;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  const sortBy = (term) => {\n\n    const compare = (a, b, term) => {\n      const objA = a[term].toUpperCase();\n      const objB = b[term].toUpperCase();\n    \n      let comparison = 0;\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n\n    let recordsSorted = records.map(record => record[term]).sort();\n\n   //console.log(records.map(record => recordsSorted.find(title => title === record.title)))\n\n  console.log(records.sort((a, b) => a.title - b.title))\n  }\n\n  sortBy()\n \n  return(\n    <div className=\"Collection\">\n      {records.map((record, index) => (\n        <Record \n          showEditor={showEditor}\n          key={index}\n          index={index}\n          artist={displayArtist(record.artistID)}\n          title={record.title}\n          year={record.year}\n          label={displayLabel(record.labelID)}\n          size={record.size}/>\n      ))}\n    </div>\n  )\n}\nexport default Collection;"]},"metadata":{},"sourceType":"module"}