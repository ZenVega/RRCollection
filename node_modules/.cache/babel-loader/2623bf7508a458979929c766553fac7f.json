{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Editor.js\";\n\n/* eslint-disable default-case */\nimport React from 'react';\nimport Autofill from './Autofill';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeRecord, changeArtist, changeLabel, changeSize, changeTitle, changeYear, addNewRecord, addNewLabel, addNewArtist } from '../actions';\n\nfunction Editor({\n  index,\n  style,\n  setHidden\n}) {\n  const dispatch = useDispatch();\n  const records = useSelector(state => state.collection.records);\n  const artists = useSelector(state => state.collection.artists);\n  const labels = useSelector(state => state.collection.labels);\n  const labelNames = labels.map(label => label.name);\n  const artistNames = artists.map(artist => artist.name);\n  const recordNames = records.map(record => record.title);\n  const title = useSelector(state => state.record.title);\n  const artist = useSelector(state => state.record.artist);\n  const label = useSelector(state => state.record.label);\n  const year = useSelector(state => state.record.year);\n  const size = useSelector(state => state.record.size);\n  const version = useSelector(state => state.add);\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case \"addTitle\":\n        dispatch(changeTitle(e.target.value));\n        break;\n\n      case \"addArtist\":\n        dispatch(changeArtist(e.target.value));\n        break;\n\n      case \"addYear\":\n        dispatch(changeYear(e.target.value));\n        break;\n\n      case \"addLabel\":\n        dispatch(changeLabel(e.target.value));\n        break;\n\n      case \"addSize\":\n        dispatch(changeSize(e.target.value));\n        break;\n    }\n  };\n\n  const addItem = e => {\n    debugger;\n    e.preventDefault();\n\n    if (index !== undefined) {\n      console.log(records.index);\n      dispatch(removeRecord(index));\n    }\n\n    debugger;\n    let artistID;\n    let artistObj = artists.find(inListArtist => inListArtist.name === artist);\n\n    if (artistObj) {\n      artistID = artistObj.artistID;\n    }\n\n    if (!artistID) {\n      artistID = Math.floor(Math.random() * 10 * 1000);\n      const artistToAdd = {\n        name: artist,\n        artistID: artistID\n      };\n      dispatch(addNewArtist(artistToAdd));\n    }\n\n    debugger;\n    let labelID;\n    let labelObj = labels.find(inListLabel => inListLabel.name === label);\n\n    if (labelObj) {\n      labelID = labelObj.labelID;\n    }\n\n    if (!labelID) {\n      labelID = Math.floor(Math.random() * 10 * 1000);\n      const labelToAdd = {\n        name: label,\n        labelID: labelID\n      };\n      dispatch(addNewLabel(labelToAdd));\n    }\n\n    const recordToAdd = {\n      artistID,\n      title,\n      year,\n      size,\n      labelID\n    };\n    dispatch(addNewRecord(recordToAdd));\n    debugger;\n    setHidden({\n      display: \"none\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"Editor\",\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \" \", version + ' record'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"addTitle\",\n    value: title,\n    onChange: e => handleChange(e),\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Autofill, {\n    className: \"Autofill\",\n    term: title,\n    array: recordNames,\n    setTerm: changeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"addArtist\",\n    value: artist,\n    onChange: e => handleChange(e),\n    placeholder: \"Artist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Autofill, {\n    className: \"Autofill\",\n    term: artist,\n    array: artistNames,\n    setTerm: changeArtist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"addYear\",\n    value: year,\n    onChange: e => handleChange(e),\n    placeholder: \"Year\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"addLabel\",\n    value: label,\n    onChange: e => handleChange(e),\n    placeholder: \"Label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Autofill, {\n    className: \"Autofill\",\n    term: label,\n    array: labelNames,\n    setTerm: changeLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"addSize\",\n    value: size,\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"12\\\"\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"10\\\"\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"7\\\"\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onSubmit: e => addItem(e),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 3\n    }\n  }, version), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setHidden({\n      display: \"none\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 3\n    }\n  }, \"\\u2716\\uFE0E\"))));\n}\n\nexport default Editor;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Editor.js"],"names":["React","Autofill","useSelector","useDispatch","removeRecord","changeArtist","changeLabel","changeSize","changeTitle","changeYear","addNewRecord","addNewLabel","addNewArtist","Editor","index","style","setHidden","dispatch","records","state","collection","artists","labels","labelNames","map","label","name","artistNames","artist","recordNames","record","title","year","size","version","add","handleChange","e","target","value","addItem","preventDefault","undefined","console","log","artistID","artistObj","find","inListArtist","Math","floor","random","artistToAdd","labelID","labelObj","inListLabel","labelToAdd","recordToAdd","display"],"mappings":"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","sourcesContent":["/* eslint-disable default-case */\nimport React from 'react';\nimport Autofill from './Autofill';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeRecord, changeArtist, changeLabel, changeSize, changeTitle, changeYear, addNewRecord, addNewLabel, addNewArtist  } from '../actions';\n\nfunction Editor({ index, style, setHidden}){\n\n  const dispatch = useDispatch();\n\n  const records = useSelector(state => state.collection.records);\n  const artists = useSelector(state => state.collection.artists);\n  const labels = useSelector(state => state.collection.labels);\n  \n  const labelNames = labels.map(label => label.name);\n  const artistNames = artists.map(artist => artist.name);\n  const recordNames = records.map(record => record.title);\n\n  const title = useSelector(state => state.record.title);\n  const artist = useSelector(state => state.record.artist);\n  const label = useSelector(state => state.record.label);\n  const year = useSelector(state => state.record.year);\n  const size = useSelector(state => state.record.size);\n\n  const version = useSelector(state => state.add)\n\n\n  const handleChange = (e) => {\n    \n    switch(e.target.name){\n      case \"addTitle\":\n      dispatch(changeTitle(e.target.value))\n      break;\n      case \"addArtist\":\n      dispatch(changeArtist(e.target.value))\n      break;\n      case \"addYear\":\n      dispatch(changeYear(e.target.value))\n      break;\n      case \"addLabel\":\n      dispatch(changeLabel(e.target.value))\n      break;\n      case \"addSize\":\n      dispatch(changeSize(e.target.value))\n      break;\n    }\n  }\n\n\n  const addItem = e => {\ndebugger;\n    e.preventDefault();\n\n    if(index !== undefined){\n      console.log(records.index)\n      dispatch(removeRecord(index));\n    }\n debugger;\n\n    let artistID;\n    let artistObj = artists.find(inListArtist => inListArtist.name === artist);\n    if(artistObj){\n      artistID = artistObj.artistID;\n    }\n\n    if(!artistID){\n      artistID = Math.floor(Math.random()*10*1000);\n\n      const artistToAdd = {\n        name: artist,\n        artistID: artistID\n      };\n      dispatch(addNewArtist(artistToAdd))\n    }\n\ndebugger;\n    let labelID;\n    let labelObj = labels.find(inListLabel => inListLabel.name === label);\n    if(labelObj){\n      labelID = labelObj.labelID;\n    }\n\n    if(!labelID){\n      labelID = Math.floor(Math.random()*10*1000);\n\n      const labelToAdd = {\n        name: label,\n        labelID: labelID\n      };\n      dispatch(addNewLabel(labelToAdd))\n    }\n\n\n    const recordToAdd = {\n      artistID,\n      title,\n      year,\n      size,\n      labelID\n    };\n\n    dispatch(addNewRecord(recordToAdd));\n    debugger;\n    setHidden( {display: \"none\" });\n  }\n\n\n\n  return(\n    <div>\n      <form className=\"Editor\"\n            style={style}\n            >\n        <h2> {version + ' record'}</h2>\n        <div className=\"inputWrapper\">\n          <input \n            type=\"text\"\n            name=\"addTitle\"\n            value={title}\n            onChange={e => handleChange(e)}\n            placeholder=\"Title\"/>  \n          <Autofill\n            className=\"Autofill\"\n            term={title}\n            array={recordNames} \n            setTerm={changeTitle}/>\n        </div>\n        <div className=\"inputWrapper\">\n          <input \n            type=\"text\"\n            name=\"addArtist\"\n            value={artist}\n            onChange={e => handleChange(e)}\n            placeholder=\"Artist\"/> \n             <Autofill\n             className=\"Autofill\"\n             term={artist}\n             array={artistNames} \n             setTerm={changeArtist}/>\n          </div>\n        <div className=\"inputWrapper\">\n          <input \n            type=\"number\"\n            name=\"addYear\"\n            value={year}\n            onChange={e => handleChange(e)}\n            placeholder=\"Year\"/> \n          </div>\n        <div className=\"inputWrapper\">\n          <input \n            type=\"text\"\n            name=\"addLabel\"\n            value={label}\n            onChange={e => handleChange(e)}\n            placeholder=\"Label\"/> \n          <Autofill\n            className=\"Autofill\"\n            term={label}\n            array={labelNames} \n            setTerm={changeLabel}/>\n        </div>\n        <div className=\"inputWrapper\">\n          <select \n            name=\"addSize\" \n            value={size}\n            onChange={e => handleChange(e)}>\n            <option value=\"12\">12\"</option>\n            <option value=\"10\">10\"</option>\n            <option value=\"7\">7\"</option>\n          </select>\n        </div>\n        <div className=\"inputWrapper\">\n  <button \n  onSubmit={e => addItem(e)}\n  type=\"submit\" >{version}</button>\n  <button onClick={() => setHidden( {display: \"none\" })}>✖︎</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}