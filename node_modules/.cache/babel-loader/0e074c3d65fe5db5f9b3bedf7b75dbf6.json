{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Collection.js\";\nimport React from 'react';\nimport Record from './Record';\nimport { useSelector } from 'react-redux';\n\nfunction Collection({\n  showEditor\n}) {\n  let artists = useSelector(state => state.collection.artists);\n  let labels = useSelector(state => state.collection.labels);\n  let records = useSelector(state => state.collection.records);\n\n  const displayArtist = id => {\n    let currentArtist = artists.find(artist => artist.artistID === id);\n\n    try {\n      return currentArtist.name;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const displayLabel = id => {\n    let currentLabel = labels.find(label => label.labelID === id);\n\n    try {\n      return currentLabel.name;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const sortBy = term => {\n    const compare = (a, b) => {\n      const objA = a[term].toUpperCase();\n      const objB = b[term].toUpperCase();\n      let comparison = 0;\n\n      if (objA > objB) {\n        comparison = 1;\n      } else if (objA < objB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    };\n\n    let newOrder = records.sort(compare);\n    newOrder.map((record, index) => /*#__PURE__*/React.createElement(Record, {\n      showEditor: showEditor,\n      key: index,\n      index: index,\n      artist: displayArtist(record.artistID),\n      title: record.title,\n      year: record.year,\n      label: displayLabel(record.labelID),\n      size: record.size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  sortBy('title');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Collection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, sortBy('title'));\n}\n\nexport default Collection;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Collection.js"],"names":["React","Record","useSelector","Collection","showEditor","artists","state","collection","labels","records","displayArtist","id","currentArtist","find","artist","artistID","name","err","console","log","displayLabel","currentLabel","label","labelID","sortBy","term","compare","a","b","objA","toUpperCase","objB","comparison","newOrder","sort","map","record","index","title","year","size"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAIA,SAASC,UAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAkC;AAEhC,MAAIC,OAAO,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBF,OAA3B,CAAzB;AACA,MAAIG,MAAM,GAAGN,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBC,MAA3B,CAAxB;AACA,MAAIC,OAAO,GAAGP,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBE,OAA3B,CAAzB;;AAEA,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAC5B,QAAIC,aAAa,GAAGP,OAAO,CAACQ,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACC,QAAP,KAAoBJ,EAA3C,CAApB;;AACA,QAAG;AACD,aAAOC,aAAa,CAACI,IAArB;AACD,KAFD,CAEC,OAAMC,GAAN,EAAU;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAPD;;AASA,QAAMG,YAAY,GAAIT,EAAD,IAAQ;AAC3B,QAAIU,YAAY,GAAGb,MAAM,CAACK,IAAP,CAAYS,KAAK,IAAIA,KAAK,CAACC,OAAN,KAAkBZ,EAAvC,CAAnB;;AACA,QAAG;AACD,aAAOU,YAAY,CAACL,IAApB;AACD,KAFD,CAEC,OAAMC,GAAN,EAAU;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAPD;;AASA,QAAMO,MAAM,GAAIC,IAAD,IAAU;AAEvB,UAAMC,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,YAAMC,IAAI,GAAGF,CAAC,CAACF,IAAD,CAAD,CAAQK,WAAR,EAAb;AACA,YAAMC,IAAI,GAAGH,CAAC,CAACH,IAAD,CAAD,CAAQK,WAAR,EAAb;AAEA,UAAIE,UAAU,GAAG,CAAjB;;AACA,UAAIH,IAAI,GAAGE,IAAX,EAAiB;AACfC,QAAAA,UAAU,GAAG,CAAb;AACD,OAFD,MAEO,IAAIH,IAAI,GAAGE,IAAX,EAAiB;AACtBC,QAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AACD,aAAOA,UAAP;AACD,KAXD;;AAaA,QAAIC,QAAQ,GAAGxB,OAAO,CAACyB,IAAR,CAAaR,OAAb,CAAf;AAEAO,IAAAA,QAAQ,CAACE,GAAT,CAAa,CAACC,MAAD,EAASC,KAAT,kBACX,oBAAC,MAAD;AACE,MAAA,UAAU,EAAEjC,UADd;AAEE,MAAA,GAAG,EAAEiC,KAFP;AAGE,MAAA,KAAK,EAAEA,KAHT;AAIE,MAAA,MAAM,EAAE3B,aAAa,CAAC0B,MAAM,CAACrB,QAAR,CAJvB;AAKE,MAAA,KAAK,EAAEqB,MAAM,CAACE,KALhB;AAME,MAAA,IAAI,EAAEF,MAAM,CAACG,IANf;AAOE,MAAA,KAAK,EAAEnB,YAAY,CAACgB,MAAM,CAACb,OAAR,CAPrB;AAQE,MAAA,IAAI,EAAEa,MAAM,CAACI,IARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD,GA9BD;;AAgCAhB,EAAAA,MAAM,CAAC,OAAD,CAAN;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,CAAC,OAAD,CADT,CADF;AAKD;;AACD,eAAerB,UAAf","sourcesContent":["import React from 'react';\nimport Record from './Record';\nimport { useSelector } from 'react-redux';\n\n\n\nfunction Collection ({showEditor}){\n\n  let artists = useSelector(state => state.collection.artists);\n  let labels = useSelector(state => state.collection.labels);\n  let records = useSelector(state => state.collection.records);\n\n  const displayArtist = (id) => {\n    let currentArtist = artists.find(artist => artist.artistID === id)\n    try{\n      return currentArtist.name;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  const displayLabel = (id) => {\n    let currentLabel = labels.find(label => label.labelID === id)\n    try{\n      return currentLabel.name;\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  const sortBy = (term) => {\n\n    const compare = (a, b) => {\n      const objA = a[term].toUpperCase();\n      const objB = b[term].toUpperCase();\n    \n      let comparison = 0;\n      if (objA > objB) {\n        comparison = 1;\n      } else if (objA < objB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n\n    let newOrder = records.sort(compare);\n    \n    newOrder.map((record, index) => (\n      <Record \n        showEditor={showEditor}\n        key={index}\n        index={index}\n        artist={displayArtist(record.artistID)}\n        title={record.title}\n        year={record.year}\n        label={displayLabel(record.labelID)}\n        size={record.size}/>\n    ))\n\n\n  }\n\n  sortBy('title')\n \n  return(\n    <div className=\"Collection\">\n      {sortBy('title')}\n    </div>\n  )\n}\nexport default Collection;"]},"metadata":{},"sourceType":"module"}