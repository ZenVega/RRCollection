{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Editor.js\";\n\n/* eslint-disable default-case */\nimport React, { useState, useEffect } from 'react';\nimport Autofill from './Autofill';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeRecord } from '../actions';\n\nfunction Editor({\n  onAdd,\n  index,\n  titles,\n  style,\n  version,\n  setHidden\n}) {\n  const records = useSelector(state => state.collection.records);\n  const artists = useSelector(state => state.collection.artists);\n  const labels = useSelector(state => state.collection.labels);\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [label, setLabel] = useState(\"\");\n  const [size, setSize] = useState(\"12\");\n  useEffect(() => {\n    if (typeof index === 'number') {\n      setTitle(records[index].title);\n      setYear(records[index].year);\n      setSize(records[index].size);\n      setArtist(artists.filter(artist => artist.artistID === records[index].artistID)[0].name);\n      setArtist(labels.filter(label => label.labelID === records[index].labelID)[0].name);\n    }\n  });\n  /*   componentDidUpdate(prevProps){\n      if(this.props.index !== prevProps.indexs){\n        \n        }\n      }\n      \n    } */\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case \"addTitle\":\n        setTitle(e.target.value);\n        break;\n\n      case \"addArtist\":\n        setArtist(e.target.value);\n        break;\n\n      case \"addYear\":\n        setYear(e.target.value);\n        break;\n\n      case \"addLabel\":\n        setLabel(e.target.value);\n        break;\n\n      case \"addSize\":\n        setSize(e.target.value);\n        break;\n    }\n  };\n\n  const addItem = e => {\n    if (index) {\n      console.log(\"delete\");\n      dispatch(removeRecord(index));\n    }\n\n    e.preventDefault();\n    let recordToEdit = {};\n    onAdd(artist, title, year, label, size);\n    setHidden({\n      display: \"none\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"Editor\",\n    style: style,\n    onSubmit: e => addItem(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \" \", version.header), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"addTitle\",\n    value: title,\n    onChange: e => handleChange(e),\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Autofill, {\n    className: \"Autofill\",\n    term: title,\n    array: titles,\n    setTerm: setTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"addArtist\",\n    value: artist,\n    onChange: e => handleChange(e),\n    placeholder: \"Artist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Autofill, {\n    className: \"Autofill\",\n    term: artist,\n    array: artists,\n    setTerm: setArtist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"addYear\",\n    onChange: e => handleChange(e),\n    placeholder: \"Year\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"addLabel\",\n    value: label,\n    onChange: e => handleChange(e),\n    placeholder: \"Label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Autofill, {\n    className: \"Autofill\",\n    term: label,\n    array: labels,\n    setTerm: setLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"addSize\",\n    value: size,\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"12\\\"\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"10\\\"\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"7\\\"\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onSubmit: addItem,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 3\n    }\n  }, version.button), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setHidden({\n      display: \"none\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 3\n    }\n  }, \"\\u2716\\uFE0E\"))));\n}\n\nexport default Editor;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Editor.js"],"names":["React","useState","useEffect","Autofill","useSelector","useDispatch","removeRecord","Editor","onAdd","index","titles","style","version","setHidden","records","state","collection","artists","labels","dispatch","title","setTitle","artist","setArtist","year","setYear","label","setLabel","size","setSize","filter","artistID","name","labelID","handleChange","e","target","value","addItem","console","log","preventDefault","recordToEdit","display","header","button"],"mappings":"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","sourcesContent":["/* eslint-disable default-case */\nimport React, { useState, useEffect } from 'react';\nimport Autofill from './Autofill';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeRecord } from '../actions';\n\nfunction Editor({onAdd, index, titles, style, version, setHidden}){\n\n  const records = useSelector(state => state.collection.records);\n  const artists = useSelector(state => state.collection.artists);\n  const labels = useSelector(state => state.collection.labels);\n  const dispatch = useDispatch();\n\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [label, setLabel] = useState(\"\");\n  const [size, setSize] = useState(\"12\");\n\n\n\n  useEffect(() => {\n    if(typeof index === 'number'){\n      setTitle(records[index].title);\n      setYear(records[index].year);\n      setSize(records[index].size);\n      setArtist(artists.filter(artist => artist.artistID === records[index].artistID)[0].name);\n      setArtist(labels.filter(label => label.labelID === records[index].labelID)[0].name);\n    }\n  })\n\n/*   componentDidUpdate(prevProps){\n    if(this.props.index !== prevProps.indexs){\n      \n      }\n    }\n    \n  } */\n  \n\n\n\n  const handleChange = (e) => {\n    switch(e.target.name){\n      case \"addTitle\":\n      setTitle(e.target.value)\n      break;\n      case \"addArtist\":\n      setArtist(e.target.value);\n      break;\n      case \"addYear\":\n      setYear(e.target.value);\n      break;\n      case \"addLabel\":\n      setLabel(e.target.value);\n      break;\n      case \"addSize\":\n      setSize(e.target.value);\n      break;\n    }\n  }\n\n\n  const addItem = e => {\n\n    if(index){\n      console.log(\"delete\")\n      dispatch(removeRecord(index));\n    }\n    e.preventDefault();\n    let recordToEdit = {\n\n    }\n    onAdd(artist,title, year, label, size);\n    setHidden( {display: \"none\" });\n  }\n\n\n\n  return(\n    <div>\n      <form className=\"Editor\"\n            style={style}\n            onSubmit={e => addItem(e)}>\n        <h2> {version.header}</h2>\n        <div className=\"inputWrapper\">\n          <input \n            type=\"text\"\n            name=\"addTitle\"\n            value={title}\n            onChange={e => handleChange(e)}\n            placeholder=\"Title\"/>  \n          <Autofill\n            className=\"Autofill\"\n            term={title}\n            array={titles} \n            setTerm={setTitle}/>\n        </div>\n        <div className=\"inputWrapper\">\n          <input \n            type=\"text\"\n            name=\"addArtist\"\n            value={artist}\n            onChange={e => handleChange(e)}\n            placeholder=\"Artist\"/> \n             <Autofill\n             className=\"Autofill\"\n             term={artist}\n             array={artists} \n             setTerm={setArtist}/>\n          </div>\n        <div className=\"inputWrapper\">\n          <input \n            type=\"number\"\n            name=\"addYear\"\n            onChange={e => handleChange(e)}\n            placeholder=\"Year\"/> \n          </div>\n        <div className=\"inputWrapper\">\n          <input \n            type=\"text\"\n            name=\"addLabel\"\n            value={label}\n            onChange={e => handleChange(e)}\n            placeholder=\"Label\"/> \n          <Autofill\n            className=\"Autofill\"\n            term={label}\n            array={labels} \n            setTerm={setLabel}/>\n        </div>\n        <div className=\"inputWrapper\">\n          <select \n            name=\"addSize\" \n            value={size}\n            onChange={e => handleChange(e)}>\n            <option value=\"12\">12\"</option>\n            <option value=\"10\">10\"</option>\n            <option value=\"7\">7\"</option>\n          </select>\n        </div>\n        <div className=\"inputWrapper\">\n  <button \n  onSubmit={addItem}\n  type=\"submit\" >{version.button}</button>\n  <button onClick={() => setHidden( {display: \"none\" })}>✖︎</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}