{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Autofill.js\";\nimport React, { Fragment, useState } from 'react';\n\nconst InputPlusAutofill = ({\n  term,\n  list,\n  handleChange\n}) => {\n  let suggestions = list.filter(string => string.toLowerCase().indexOf(term.toLowerCase()) > -1);\n  console.log(suggestions);\n  const [unclicked, setUnclicked] = useState(true);\n  const [focused, setFocused] = useState(false);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"AutofillInput\",\n    type: \"text\",\n    name: \"addTitle\",\n    value: term,\n    onChange: e => {\n      setUnclicked(true);\n      handleChange(e.target.value);\n    },\n    onFocus: setFocused,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"suggestionWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, term && unclicked && suggestions.map((suggestion, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    className: \"suggestion\",\n    onClick: e => {\n      setUnclicked(false);\n      handleChange(suggestion);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, suggestion))));\n};\n\nexport default InputPlusAutofill;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Autofill.js"],"names":["React","Fragment","useState","InputPlusAutofill","term","list","handleChange","suggestions","filter","string","toLowerCase","indexOf","console","log","unclicked","setUnclicked","focused","setFocused","e","target","value","map","suggestion","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAAgC;AACxD,MAAIC,WAAW,GAAGF,IAAI,CAACG,MAAL,CAAYC,MAAM,IAAIA,MAAM,CAACC,WAAP,GAAqBC,OAArB,CAA6BP,IAAI,CAACM,WAAL,EAA7B,IAAmD,CAAC,CAA1E,CAAlB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEE,IAJT;AAKE,IAAA,QAAQ,EAAEc,CAAC,IAAI;AAACH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoBT,MAAAA,YAAY,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAA6B,KALnE;AAME,IAAA,OAAO,EAAEH,UANX;AAOE,IAAA,WAAW,EAAC,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIb,IAAI,IAAIU,SAAR,IAAqBP,WAAW,CAACc,GAAZ,CAAgB,CAACC,UAAD,EAAaC,KAAb,kBACrC;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,OAAO,EAAEL,CAAC,IAAI;AAACH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAAqBT,MAAAA,YAAY,CAACgB,UAAD,CAAZ;AAA2B,KAHjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKEA,UALF,CADqB,CADzB,CAVF,CADF;AAyBD,CA/BD;;AAiCA,eAAenB,iBAAf","sourcesContent":["import React, {Fragment, useState} from 'react';\n\nconst InputPlusAutofill = ({term, list, handleChange}) => {\n  let suggestions = list.filter(string => string.toLowerCase().indexOf(term.toLowerCase()) > -1);\n  console.log(suggestions)\n  const [unclicked, setUnclicked] = useState(true); \n  const [focused, setFocused] = useState(false);\n\n  return (\n    <Fragment>\n      <input \n        className=\"AutofillInput\"\n        type=\"text\"\n        name=\"addTitle\"\n        value={term}\n        onChange={e => {setUnclicked(true); handleChange(e.target.value)}}\n        onFocus={setFocused}\n        placeholder=\"Title\"\n      />  \n      <div className=\"suggestionWrapper\">\n        { term && unclicked && suggestions.map((suggestion, index) => ( \n          <p \n            key={index} \n            className=\"suggestion\" \n            onClick={e => {setUnclicked(false); handleChange(suggestion)  }}\n          >\n          { suggestion }\n          </p>\n        ))}\n      </div>\n\n    </Fragment>\n  )\n}\n\nexport default InputPlusAutofill;"]},"metadata":{},"sourceType":"module"}