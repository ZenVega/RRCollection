{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/PicSelector.js\";\nimport React, { useState } from 'react';\nimport Discogs from './util/Discogs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateImageArray, changeImage } from '../actions'; // WRONG PICTURE GETS UPDATED\n// BUTTONS DON'T DISAPPER APPEAR YET\n// URL UPDATE AIN'T WORKING YET\n// SATZZEICHEN IN DER BILDERSUCHE SIND PROBLEMATISCH\n\nfunction PicSelector() {\n  const dispatch = useDispatch();\n  const title = useSelector(state => state.record.title);\n  const artist = useSelector(state => state.record.artist);\n  const imageArray = useSelector(state => state.imageArray);\n  const [counter, setCounter] = useState(0);\n  const [style, setStyle] = useState({\n    findBtn: {\n      display: 'block'\n    },\n    urlInput: {\n      display: 'block'\n    },\n    preNxt: {\n      display: 'none'\n    }\n  });\n\n  const imageSwapPrevious = e => {\n    e.preventDefault();\n\n    if (counter === 0) {\n      setCounter(imageArray.length - 1);\n    } else {\n      setCounter(counter - 1);\n    }\n\n    dispatch(changeImage(imageArray[counter - 1]));\n    console.log(counter);\n    console.log(imageArray);\n  };\n\n  const imageSwapNext = e => {\n    e.preventDefault();\n\n    if (counter === imageArray.length - 1) {\n      setCounter(0);\n    } else {\n      setCounter(counter + 1);\n    }\n\n    dispatch(changeImage(imageArray[counter + 1]));\n    console.log(counter, imageArray[counter]);\n  };\n\n  const findImage = e => {\n    e.preventDefault();\n    setCounter(0);\n    let titleQuery = title.replace(/ /g, '+');\n    let artistQuery = artist.replace(/ /g, '+');\n    let term = `${titleQuery}+${artistQuery}`;\n    Discogs.search(term).then(res => res.results.map(result => result.cover_image)).then(res => res.filter(url => url.indexOf('spacer.gif') === -1)).then(res => dispatch(updateImageArray(res))).then(res => dispatch(changeImage(res.payload[0])));\n    setStyle({\n      findBtn: {\n        display: 'block'\n      },\n      urlInput: {\n        display: 'block'\n      },\n      preNxt: {\n        display: 'block'\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imgBox oneLine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => findImage(e),\n    id: \"findBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Find Cover\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: style.preNxt,\n    className: \"imageSwitches\",\n    id: \"prevBtn\",\n    onClick: e => imageSwapPrevious(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"prev\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: style.preNxt,\n    className: \"imageSwitches\",\n    id: \"nextBtn\",\n    onClick: e => imageSwapNext(e, 'plus'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"next\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"previewImage\",\n    src: imageArray[counter],\n    alt: \"album_cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"imageGetter\",\n    type: \"text\",\n    placeholder: \"or insert imageUrl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"imageGetterBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \" upload\"));\n}\n\nexport default PicSelector;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/PicSelector.js"],"names":["React","useState","Discogs","useSelector","useDispatch","updateImageArray","changeImage","PicSelector","dispatch","title","state","record","artist","imageArray","counter","setCounter","style","setStyle","findBtn","display","urlInput","preNxt","imageSwapPrevious","e","preventDefault","length","console","log","imageSwapNext","findImage","titleQuery","replace","artistQuery","term","search","then","res","results","map","result","cover_image","filter","url","indexOf","payload"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Discogs from './util/Discogs';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { updateImageArray, changeImage } from '../actions';\n\n// WRONG PICTURE GETS UPDATED\n// BUTTONS DON'T DISAPPER APPEAR YET\n// URL UPDATE AIN'T WORKING YET\n// SATZZEICHEN IN DER BILDERSUCHE SIND PROBLEMATISCH\n\nfunction PicSelector () {\n  const dispatch = useDispatch()\n  const title = useSelector(state => state.record.title);\n  const artist = useSelector(state => state.record.artist);\n\n  const imageArray = useSelector(state => state.imageArray);\n\n  const [counter, setCounter] = useState(0);\n  const [style,setStyle] = useState(\n    {\n      findBtn: {display: 'block'},\n      urlInput: {display: 'block'},\n      preNxt : {display: 'none'}\n\n    }\n  );\n\n  const imageSwapPrevious = (e) => {\n    e.preventDefault();\n    \n      if(counter === 0){\n        setCounter(imageArray.length -1)\n      }else {\n      setCounter(counter - 1);\n      }\n\n    dispatch(changeImage(imageArray[counter-1]))\n    console.log(counter);\n    console.log(imageArray)\n  \n  }\n  const imageSwapNext = (e) => {\n    e.preventDefault();\n    \n        if(counter === imageArray.length -1){\n          setCounter(0);\n        } else {\n          setCounter(counter +1);\n        }\n      \n    dispatch(changeImage(imageArray[counter+1]))\n    console.log(counter, imageArray[counter]);\n  }\n  \n\n  const findImage = e => {\n    e.preventDefault();\n    setCounter(0);\n\n    let titleQuery = title.replace(/ /g, '+');\n    let artistQuery = artist.replace(/ /g, '+');\n    let term = `${titleQuery}+${artistQuery}`;\n    \n    Discogs.search(term)\n    .then(res =>  res.results.map(result => result.cover_image))\n    .then(res => res.filter(url => url.indexOf('spacer.gif') === -1))\n    .then(res => dispatch(updateImageArray(res)))\n    .then(res => dispatch(changeImage(res.payload[0])))\n\n    setStyle( {\n      findBtn: {display: 'block'},\n      urlInput: {display: 'block'},\n      preNxt : {display: 'block'}\n\n    })\n  }\n\n\n  return(\n    <div className=\"imgBox oneLine\">\n      <button \n        onClick={e => findImage(e)}\n        id=\"findBtn\">Find Cover</button>\n      <button \n        style={style.preNxt}\n        className=\"imageSwitches\" \n        id=\"prevBtn\"\n        onClick={(e) => imageSwapPrevious(e)}>prev</button>\n      <button \n        style={style.preNxt}\n        className=\"imageSwitches\" \n        id=\"nextBtn\"\n        onClick={(e) => imageSwapNext(e,'plus')}>next</button>\n      <img \n        className=\"previewImage\" \n        src={imageArray[counter]} \n        alt=\"album_cover\" />\n      <input \n        id=\"imageGetter\" \n        type=\"text\"\n        placeholder=\"or insert imageUrl\"/>\n      <button id=\"imageGetterBtn\"> upload</button>  \n    </div>\n  )\n}\n\nexport default PicSelector;"]},"metadata":{},"sourceType":"module"}