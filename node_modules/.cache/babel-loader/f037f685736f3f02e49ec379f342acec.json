{"ast":null,"code":"import { initialCollectionState } from './initialState';\nimport { removeRecord } from '../actions';\nconst records = {\n  \"adhg2jkh3g4kj23gh4\": {\n    name: \"foo\"\n  },\n  \"234hgj3h4gkj2h3g4\": {\n    name: \"bar\"\n  }\n};\n\nconst collectionReducer = (state = initialCollectionState, action) => {\n  switch (action.type) {\n    case 'ADD_RECORD':\n      return { ...state,\n        records: state.records.concat(action.payload)\n      };\n\n    case 'ADD_LABEL':\n      return { ...state,\n        labels: state.labels.concat(action.payload)\n      };\n\n    case 'ADD_ARTIST':\n      return { ...state,\n        artists: state.artists.concat(action.payload)\n      };\n\n    case 'REMOVE_RECORD':\n      return { ...state,\n        records: state.records.filter((record, index) => index !== action.payload)\n      };\n\n    case 'EDIT_RECORD':\n      return { ...state,\n        records: state.records.splice(action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default collectionReducer;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/reducers/collectionReducer.js"],"names":["initialCollectionState","removeRecord","records","name","collectionReducer","state","action","type","concat","payload","labels","artists","filter","record","index","splice"],"mappings":"AAAA,SAAQA,sBAAR,QAAqC,gBAArC;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,OAAO,GAAG;AACd,wBAAsB;AACpBC,IAAAA,IAAI,EAAE;AADc,GADR;AAId,uBAAqB;AACnBA,IAAAA,IAAI,EAAE;AADa;AAJP,CAAhB;;AASC,MAAMC,iBAAiB,GAAG,CAAEC,KAAK,GAAGL,sBAAV,EAAkCM,MAAlC,KAA4C;AACrE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,YAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcM,MAAd,CAAqBF,MAAM,CAACG,OAA5B;AAFJ,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,MAAM,EAAEL,KAAK,CAACK,MAAN,CAAaF,MAAb,CAAoBF,MAAM,CAACG,OAA3B;AAFH,OAAP;;AAIF,SAAK,YAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELM,QAAAA,OAAO,EAAEN,KAAK,CAACM,OAAN,CAAcH,MAAd,CAAqBF,MAAM,CAACG,OAA5B;AAFJ,OAAP;;AAIF,SAAK,eAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcU,MAAd,CAAqB,CAACC,MAAD,EAASC,KAAT,KAAmBA,KAAK,KAAKR,MAAM,CAACG,OAAzD;AAFJ,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAca,MAAd,CAAqBT,MAAM,CAACG,OAA5B;AAFJ,OAAP;;AAIF;AACE,aAAOJ,KAAP;AA3BJ;AA6BD,CA9BA;;AAgCD,eAAeD,iBAAf","sourcesContent":["import {initialCollectionState} from './initialState';\nimport { removeRecord } from '../actions';\n\nconst records = {\n  \"adhg2jkh3g4kj23gh4\": {\n    name: \"foo\"\n  },\n  \"234hgj3h4gkj2h3g4\": {\n    name: \"bar\"\n  }\n}\n\n const collectionReducer = ( state = initialCollectionState, action) =>{\n  switch(action.type){\n    case 'ADD_RECORD':\n      return {\n        ...state, \n        records: state.records.concat(action.payload)\n      }\n    case 'ADD_LABEL':\n      return {\n        ...state, \n        labels: state.labels.concat(action.payload)\n      }\n    case 'ADD_ARTIST':\n      return {\n        ...state, \n        artists: state.artists.concat(action.payload)\n      }\n    case 'REMOVE_RECORD':\n      return {\n        ...state, \n        records: state.records.filter((record, index) => index !== action.payload)\n      }\n    case 'EDIT_RECORD':\n      return {\n        ...state, \n        records: state.records.splice(action.payload)\n      }\n    default:\n      return state;\n  }\n};\n\nexport default collectionReducer;"]},"metadata":{},"sourceType":"module"}