{"ast":null,"code":"var _jsxFileName = \"/Users/Urs/code/rrcollection/src/components/Autofill.js\";\nimport React, { Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst Autofill = ({\n  term,\n  list,\n  setTerm\n}) => {\n  // const dispatch = useDispatch();\n  let suggestions = list.filter(string => string.toLowerCase().indexOf(term.toLowerCase()) > -1); // const [show, setShow];\n  //import input\n\n  return term && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, suggestions.map((suggestion, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    className: \"suggestion\",\n    onClick: e => console.log(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, suggestion)));\n};\n\nexport default Autofill;","map":{"version":3,"sources":["/Users/Urs/code/rrcollection/src/components/Autofill.js"],"names":["React","Fragment","useDispatch","Autofill","term","list","setTerm","suggestions","filter","string","toLowerCase","indexOf","map","suggestion","index","e","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAA2B;AAE1C;AACA,MAAIC,WAAW,GAAGF,IAAI,CAACG,MAAL,CAAYC,MAAM,IAAIA,MAAM,CAACC,WAAP,GAAqBC,OAArB,CAA6BP,IAAI,CAACM,WAAL,EAA7B,IAAmD,CAAC,CAA1E,CAAlB,CAH0C,CAI1C;AACA;;AAEA,SAAON,IAAI,iBACT,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIG,WAAW,CAACK,GAAZ,CAAgB,CAACC,UAAD,EAAaC,KAAb,kBAClB;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,OAAO,EAAGC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIF,UALJ,CADE,CADJ,CADF;AAaD,CApBD;;AAsBA,eAAeV,QAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst Autofill = ({term, list, setTerm}) => {\n\n  // const dispatch = useDispatch();\n  let suggestions = list.filter(string => string.toLowerCase().indexOf(term.toLowerCase()) > -1);\n  // const [show, setShow];\n  //import input\n\n  return term && (\n    <Fragment>\n      { suggestions.map((suggestion, index) => ( \n      <p \n        key={index} \n        className=\"suggestion\" \n        onClick={ e => console.log(e) }\n      >\n        { suggestion }\n      </p>\n      ))}\n    </Fragment>\n  )\n}\n\nexport default Autofill;"]},"metadata":{},"sourceType":"module"}